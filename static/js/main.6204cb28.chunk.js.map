{"version":3,"sources":["reportWebVitals.js","api/api.js","redux/todo-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Header/LoginForm.jsx","components/Header/RegisterForm.jsx","components/Header/LoginButtons.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Todos/EditTodo.jsx","components/Todos/AddTodo.jsx","components/Todos/Todolist.jsx","components/Todos/TodolistContainer.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","headers","localStorage","token","interceptors","request","use","config","getItem","Authorization","authAPI","get","email","password","post","passwordConfirm","todoAPI","todoId","patch","delete","todo","put","SET_TODOS","SET_EDIT_TODO","TOGGLE_DONE","DELETE_TODO","ADD_TODO","SET_LOADING","initialState","todos","isLoading","setTodos","type","payload","setToggleDone","updated","setDeleteTodo","addNewTodo","setEditTodo","setLoading","getTodos","dispatch","a","response","data","status","todoReducer","state","action","map","id","filter","s","Object","assign","SET_USER_DATA","SET_LOGIN_ERRORS","SET_REGISTER_ERRORS","SET_REGISTER_SUCCEEDED","SET_SUBMITTING","login","isAuth","loginErrors","registerErrors","isSubmitting","setLoginErrors","setRegisterErrors","setAuthUserData","setRegisterSuccess","message","successMessage","setSubmitting","getAuthUserData","authReducer","INITIALIZED_SUCCESS","GLOBAL_ERROR","initialized","globalError","errorCreator","error","appReducer","reducers","combineReducers","auth","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","useStyles","makeStyles","loginForm","display","flexDirection","color","marginTop","loginValidationSchema","yup","required","max","LoginForm","removeLoginErrors","useEffect","setLoginState","styles","useState","loginState","handleCloseLogin","setTimeout","formik","useFormik","initialValues","validationSchema","onSubmit","values","setDisabled","resetForm","disabled","Box","className","dialog","mr","Button","variant","onClick","Dialog","open","onClose","maxWidth","DialogTitle","handleSubmit","DialogContent","DialogContentText","TextField","fullWidth","name","label","value","onChange","handleChange","touched","Boolean","errors","helperText","DialogActions","registerForm","success","registerValidationSchema","min","oneOf","RegisterForm","register","removeRegisterErrors","removeRegisterSuccess","setRegisterState","handleCloseRegister","registerState","onKeyDown","e","key","preventDefault","x","LoginButtons","handleSucceeded","theme","title","flexGrow","logout","marginLeft","spacing","progress","Header","userName","props","AppBar","position","Container","fixed","Toolbar","Typography","HeaderContainer","React","memo","connect","setItem","Message","removeItem","Status","Errors","Description","console","log","nounsArray","addButton","createMuiTheme","palette","primary","green","secondary","red","secondaryIcon","marginRight","transition","cursor","tags","justifyContent","formControl","margin","minWidth","addButtons","done","todoValidationSchema","content","EditTodo","editTodo","editingTodo","setStatus","classes","setOpen","handleClose","firstTag","setFirstTag","secondTag","setSecondTag","thirdTag","setThirdTag","added","FormControl","InputLabel","Select","event","target","MenuItem","ButtonGroup","size","addNew","AddNewTodo","addTodo","newTodoState","setNewTodoState","handleCloseNewTodo","Fab","backgroundColor","background","paper","padding","listItem","alignItems","listItemText","chip","note","transitionDuration","doneNote","opacity","dates","date","paddingBottom","borderRadius","minHeight","marginBottom","todolist","todolistHeader","paddingTop","todolistHeaderDates","todolistHeaderTitle","fontSize","fontWeight","todolistHeaderDatesItem","tablePagination","bottom","right","unAuthorized","backdrop","zIndex","drawer","left","Todolist","sliced","toggleDone","deleteTodo","handleDelete","page","setPage","rowsPerPage","setRowsPerPage","slice","Paper","length","List","ListItem","ListItemIcon","Checkbox","checked","ListItemText","Chip","Date","parse","toLocaleString","ListItemSecondaryAction","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","CircularProgress","TodolistContainer","Backdrop","deepPurple","App","initializeApp","body","AppContainer","handleError","toString","Application","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6204cb28.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://todolistwebapplication.azurewebsites.net/',\r\n    headers: {\r\n        'Authorization': `Bearer ${localStorage.token}`\r\n    }\r\n});\r\nconst checkTokenInterceptor = (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n};\r\ninstance.interceptors.request.use(checkTokenInterceptor);\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password) {\r\n        return instance.post(`https://todolistwebapplication.azurewebsites.net/auth/login`, { email, password });\r\n    },\r\n    register(email, password, passwordConfirm) {\r\n        return instance.post(`https://todolistwebapplication.azurewebsites.net/auth/register`, { email, password, passwordConfirm } );\r\n    }\r\n}\r\n\r\n\r\nexport const todoAPI = {\r\n    getAll() {\r\n        return instance.get(`todo`);\r\n    },\r\n    toggleDone(todoId) {\r\n        return instance.patch(`todo?Id=${todoId}`)\r\n    },\r\n    deleteTodo(todoId) {\r\n        return instance.delete(`todo?Id=${todoId}`)\r\n    },\r\n    addTodo(todo) {\r\n        return instance.post(`todo`, todo);\r\n    },\r\n    editTodo(todo) {\r\n        return instance.put(`todo`, todo);\r\n    }\r\n}","import {todoAPI} from \"../api/api\";\r\n\r\n\r\nconst SET_TODOS = '/todo/SET_TODOS';\r\nconst SET_EDIT_TODO = '/todo/SET_EDIT_TODO';\r\nconst TOGGLE_DONE = '/todo/TOGGLE_DONE';\r\nconst DELETE_TODO = '/todo/DELETE_TODO';\r\nconst ADD_TODO = '/todo/ADD_TODO';\r\nconst SET_LOADING = '/todo/SET_LOADING';\r\n\r\n// initial state\r\nlet initialState = {\r\n    todos: null,\r\n    isLoading: false\r\n}\r\n\r\n// todoReducer\r\nconst todoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TODOS:\r\n            return { ...state, ...action.payload };\r\n        case TOGGLE_DONE:\r\n            return { ...state, todos: state.todos.map(todo => {\r\n                if (todo.id !== action.todo.todoId) {\r\n                    return todo;\r\n                }\r\n                return {\r\n                    ...todo,\r\n                    status: !todo.status,\r\n                    updated: action.todo.updated\r\n                };\r\n            })\r\n        };\r\n        case ADD_TODO:\r\n            return { ...state, todos: [action.todo, ...state.todos] }\r\n        case DELETE_TODO:\r\n            return { ...state, todos: state.todos.filter(todo => todo.id !== action.todoId) }\r\n        case SET_EDIT_TODO:\r\n            return { ...state, todos: state.todos.map(s => s.id === action.todo.id ?\r\n                Object.assign({}, s, action.todo) : s )};\r\n        case SET_LOADING: {\r\n            return { ...state, ...action.payload }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setTodos = (todos) => ({type: SET_TODOS, payload: { todos: todos }});\r\n\r\nexport const setToggleDone = (todoId, updated) => ({type: TOGGLE_DONE, todo: { todoId, updated }});\r\n\r\nexport const setDeleteTodo = (todoId) => ({type: DELETE_TODO, todoId});\r\n\r\nexport const addNewTodo = (todo) => ({type: ADD_TODO, todo});\r\n\r\nexport const setEditTodo = (todo) => ({type: SET_EDIT_TODO, todo});\r\n\r\nexport const setLoading = (isLoading) => ({type: SET_LOADING, payload: { isLoading }});\r\n\r\n// thunk - get todos\r\nexport const getTodos = () => async (dispatch) => {\r\n    let response = await todoAPI.getAll();\r\n    if (response.data.status === 0) {\r\n        let todos = response.data.data;\r\n        dispatch(setTodos(todos));\r\n    }\r\n}\r\n\r\nexport const toggleDone = (todoId) => async (dispatch) => {\r\n    let response = await todoAPI.toggleDone(todoId);\r\n    if (response.data.status === 0) {\r\n        dispatch(setToggleDone(todoId, response.data.data));\r\n    }\r\n}\r\n\r\nexport const deleteTodo = (todoId) => async (dispatch) => {\r\n    let response = await todoAPI.deleteTodo(todoId);\r\n    if (response.data.status === 0) {\r\n        dispatch(setDeleteTodo(todoId));\r\n    }\r\n}\r\n\r\nexport const addTodo = (todo) => async (dispatch) => {\r\n    let response = await todoAPI.addTodo(todo);\r\n    if (response.data.status === 0) {\r\n        dispatch(addNewTodo({...todo, id: response.data.data.id, added: response.data.data.added, updated: response.data.data.added}));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const editTodo = (todo) => async (dispatch) => {\r\n    let response = await todoAPI.editTodo(todo);\r\n    if (response.data.status === 0) {\r\n        dispatch(setEditTodo(response.data.data));\r\n    }\r\n}\r\n\r\nexport default todoReducer;","import {authAPI} from \"../api/api\";\r\nimport {getTodos, setLoading, setTodos} from \"./todo-reducer\";\r\n\r\n\r\nconst SET_USER_DATA = '/auth/SET_USER_DATA';\r\nconst SET_LOGIN_ERRORS = '/auth/SET_LOGIN_ERRORS';\r\nconst SET_REGISTER_ERRORS = '/auth/SET_REGISTER_ERRORS';\r\nconst SET_REGISTER_SUCCEEDED = '/auth/SET_REGISTER_SUCCEEDED';\r\nconst SET_SUBMITTING = '/auth/SET_SUBMITTING';\r\n\r\n// initial state\r\nlet initialState = {\r\n    login: null,\r\n    isAuth: false,\r\n    loginErrors: null,\r\n    registerErrors: null,\r\n    isSubmitting: false\r\n}\r\n\r\n// authReducer\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return { ...state, ...action.payload };\r\n        case SET_REGISTER_ERRORS:\r\n            return { ...state, ...action.payload };\r\n        case SET_LOGIN_ERRORS:\r\n            return { ...state, ...action.payload };\r\n        case SET_REGISTER_SUCCEEDED:\r\n            return { ...state, ...action.payload };\r\n        case SET_SUBMITTING: {\r\n            return { ...state, ...action.payload };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n// action creator - adding errors\r\nexport const setLoginErrors = (loginErrors) => ({type: SET_LOGIN_ERRORS, payload: { loginErrors }})\r\nexport const setRegisterErrors = (registerErrors) => ({type: SET_REGISTER_ERRORS, payload: { registerErrors }})\r\n\r\n// action creator - setting user data\r\nexport const setAuthUserData = (login, isAuth) => ({type: SET_USER_DATA, payload: {login, isAuth}});\r\n\r\n// action creator - setting register success\r\nexport const setRegisterSuccess = (message) => ({type: SET_REGISTER_SUCCEEDED, payload: { successMessage: message }})\r\n\r\n// action creator - submitting\r\nexport const setSubmitting = (isSubmitting) => ({type: SET_SUBMITTING, payload: { isSubmitting }})\r\n\r\n// thunk - getting user data\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    dispatch(setLoading(true));\r\n    let response = await authAPI.me();\r\n    if (response.data.status === 0 && response.data.data != null) {\r\n        let login = response.data.data;\r\n        dispatch(setAuthUserData(login, true));\r\n        dispatch(getTodos());\r\n    }\r\n    else {\r\n        dispatch(setAuthUserData(null, false));\r\n    }\r\n    dispatch(setLoading(false));\r\n}\r\n\r\n// thunk - login\r\nexport const login = (email, password) => async (dispatch) => {\r\n    dispatch(setSubmitting(true));\r\n    let response = await authAPI.login(email, password);\r\n    if (response.data.status === 0) {\r\n        localStorage.setItem('token', response.data.data);\r\n        dispatch(getAuthUserData());\r\n    }\r\n    else {\r\n        let message = response.data.Message;\r\n        dispatch(setLoginErrors(message));\r\n    }\r\n    dispatch(setSubmitting(false));\r\n}\r\n\r\nexport const removeLoginErrors = () => (dispatch) => {\r\n    dispatch(setLoginErrors(null));\r\n}\r\n\r\nexport const removeRegisterErrors = () => (dispatch) => {\r\n    dispatch(setRegisterErrors(null));\r\n}\r\n\r\nexport const removeRegisterSuccess = () => (dispatch) => {\r\n    dispatch(setRegisterSuccess(null));\r\n}\r\n\r\n// thunk - logout\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('token');\r\n    dispatch(setAuthUserData(null, false, null, false))\r\n    dispatch(setTodos(null));\r\n}\r\n\r\n// thunk - register\r\nexport const register = (email, password, passwordConfirm) => async (dispatch) => {\r\n    dispatch(setSubmitting(true));\r\n    let response = await authAPI.register(email, password, passwordConfirm);\r\n    dispatch(setSubmitting(false));\r\n    if (response.data.Status === 1) {\r\n        dispatch(setRegisterErrors(response.data.Errors.map(x => x.Description)));\r\n    }\r\n    if (response.data.status === 0) {\r\n        dispatch(setRegisterSuccess(response.data.message));\r\n    }\r\n    else {\r\n        console.log('Unhandled exception!')\r\n    }\r\n}\r\n\r\nexport default authReducer;","import { getAuthUserData } from \"./auth-reducer\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\nconst GLOBAL_ERROR = 'GLOBAL_ERROR';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    globalError: null\r\n}\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        case GLOBAL_ERROR:\r\n            return {\r\n                ...state,\r\n                globalError: action.error\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const errorCreator = (error) => ({type: GLOBAL_ERROR, error: error});\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    await dispatch(getAuthUserData());\r\n    dispatch(initializedSuccess());\r\n}\r\nexport const handleError = (error) => async (dispatch) => {\r\n    await dispatch(errorCreator(error.toString()));\r\n    setTimeout(() => dispatch(errorCreator(null)), 5000);\r\n}\r\n\r\n\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport todoReducer from \"./todo-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    todo: todoReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n\r\nexport default store;","import {useEffect, useState} from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport {\r\n    Backdrop,\r\n    Box,\r\n    Button, CircularProgress,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle, LinearProgress,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport * as yup from \"yup\";\r\n\r\n//styles\r\nconst useStyles = makeStyles(() => ({\r\n    loginForm: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    error: {\r\n        color: 'red',\r\n        marginTop: '10px'\r\n    }\r\n}))\r\n\r\n\r\n//validation\r\nconst loginValidationSchema = yup.object({\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .max(30, 'Maximum length is 30 chars')\r\n        .required('Password is required'),\r\n});\r\n\r\nconst LoginForm = ({login, loginErrors, removeLoginErrors}) => {\r\n    //\r\n    useEffect(() => {\r\n        if (loginErrors != null) {\r\n            setLoginState(true)\r\n        }\r\n    }, [loginErrors])\r\n\r\n    //styles\r\n    const styles = useStyles();\r\n\r\n    //dialog state\r\n    const [loginState, setLoginState] = useState(false);\r\n    const handleOpenLogin = () => setLoginState(true);\r\n    const handleCloseLogin = () => {\r\n        setLoginState(false);\r\n        if (loginErrors != null) {\r\n            setTimeout(() => removeLoginErrors(), 100);\r\n        }\r\n    };\r\n\r\n    //form\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        validationSchema: loginValidationSchema,\r\n        onSubmit: (values) => {\r\n            handleCloseLogin();\r\n            setDisabled(true);\r\n            login(values.email, values.password);\r\n            setDisabled(false);\r\n            formik.resetForm();\r\n        }\r\n    });\r\n\r\n    //button state\r\n    let [disabled, setDisabled] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Box className={styles.dialog} mr={3}>\r\n                <Button variant=\"outlined\" color=\"inherit\" onClick={ handleOpenLogin }>Login</Button>\r\n                <Dialog className={styles.loginForm} open={loginState} onClose={handleCloseLogin} maxWidth={'xs'}>\r\n                    <DialogTitle>Login</DialogTitle>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <DialogContent >\r\n                            <DialogContentText>Log in to see videos</DialogContentText>\r\n                            <TextField fullWidth id=\"email\" name=\"email\" label=\"Email\" value={formik.values.email} onChange={formik.handleChange} error={formik.touched.email && Boolean(formik.errors.email)} helperText={formik.touched.email && formik.errors.email}/>\r\n                            <TextField fullWidth id=\"password\" name=\"password\" label=\"Password\" type=\"password\" value={formik.values.password} onChange={formik.handleChange} error={formik.touched.password && Boolean(formik.errors.password)} helperText={formik.touched.password && formik.errors.password}/>\r\n                            { loginErrors && <DialogContentText className={styles.error}>{loginErrors}</DialogContentText> }\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleCloseLogin} color={\"primary\"}>Cancel</Button>\r\n                            <Button type={'submit'} disabled={disabled} color={\"primary\"}>Login</Button>\r\n                        </DialogActions>\r\n                    </form>\r\n                </Dialog>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default LoginForm;","import {useEffect, useState} from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport {Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField} from \"@material-ui/core\";\r\nimport * as yup from \"yup\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n\r\n//styles\r\nconst useStyles = makeStyles(() => ({\r\n    registerForm: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    success: {\r\n        color: 'green',\r\n        marginTop: '10px'\r\n    },\r\n    error: {\r\n        color: 'red',\r\n        marginTop: '10px'\r\n    }\r\n\r\n}))\r\n\r\n//validation\r\nconst registerValidationSchema = yup.object({\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(6, 'Password should be of minimum 6 characters length')\r\n        .required('Password is required'),\r\n    passwordConfirm: yup\r\n        .string('Enter password confirmation')\r\n        .min(6, 'Password should be of minimum 6 characters length')\r\n        .oneOf([yup.ref('password'), null], 'Passwords must match')\r\n        .required('Password is required'),\r\n});\r\n//element\r\nconst RegisterForm = ({register, registerErrors, successMessage, removeRegisterErrors, removeRegisterSuccess}) => {\r\n    //\r\n    useEffect(() => {\r\n        if (registerErrors != null || successMessage) {\r\n            setRegisterState(true);\r\n        }\r\n        if (successMessage) {\r\n            setRegisterState(true);\r\n            setTimeout(() => handleCloseRegister(), 3000);\r\n        }\r\n    }, [registerErrors, successMessage])\r\n\r\n    //Register\r\n    const [registerState, setRegisterState] = useState(false);\r\n    const handleOpenRegister = () => setRegisterState(true);\r\n    const handleCloseRegister = () => {\r\n        setRegisterState(false);\r\n        if (registerErrors != null || successMessage) {\r\n            setTimeout(() => {\r\n                removeRegisterErrors()\r\n                removeRegisterSuccess();\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    //form\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            passwordConfirm: ''\r\n        },\r\n        validationSchema: registerValidationSchema,\r\n        onSubmit: async (values) => {\r\n            handleCloseRegister();\r\n            setDisabled(true);\r\n            await register(values.email, values.password, values.passwordConfirm);\r\n            setDisabled(false);\r\n            formik.resetForm();\r\n        },\r\n    });\r\n\r\n    // button state\r\n    let [disabled, setDisabled] = useState(false);\r\n\r\n    //styles\r\n    let styles = useStyles();\r\n    return (\r\n        <Box>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleOpenRegister} onKeyDown={(e) => { if (e.key === 'Enter') { e.preventDefault(); }}}>Sign up</Button>\r\n            <Dialog className={styles.registerForm} open={registerState} onClose={handleCloseRegister} maxWidth={'xs'}>\r\n                <DialogTitle>Sign Up</DialogTitle>\r\n                <form onSubmit={ formik.handleSubmit } onKeyDown={ (e) => { if (e.key === 'Enter') e.preventDefault(); }}  >\r\n                    <DialogContent>\r\n                        <DialogContentText>Sign up to work with todolist</DialogContentText>\r\n                        <TextField fullWidth id=\"email\" name=\"email\" label=\"Email\" value={formik.values.email} onChange={formik.handleChange} error={formik.touched.email && Boolean(formik.errors.email)} helperText={formik.touched.email && formik.errors.email}/>\r\n                        <TextField fullWidth id=\"password\" name=\"password\" label=\"Password\" type=\"password\" value={formik.values.password} onChange={formik.handleChange} error={formik.touched.password && Boolean(formik.errors.password)} helperText={formik.touched.password && formik.errors.password}/>\r\n                        <TextField fullWidth id=\"check\" name=\"passwordConfirm\" label=\"Password Confirmation\" type=\"password\" value={formik.values.passwordConfirm} onChange={formik.handleChange} error={formik.touched.passwordConfirm && Boolean(formik.errors.passwordConfirm)} helperText={formik.touched.passwordConfirm && formik.errors.passwordConfirm}/>\r\n                        { registerErrors && registerErrors.map(x => <DialogContentText key={x} className={styles.error}>{x}<br/></DialogContentText>) }\r\n                        { successMessage && <DialogContentText className={styles.success}>{successMessage}</DialogContentText>}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleCloseRegister} color={\"primary\"}>Cancel</Button>\r\n                        <Button type={'submit'} disabled={disabled} color={\"primary\"}>Register</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nexport default RegisterForm;","import LoginForm from \"./LoginForm\";\r\nimport RegisterForm from \"./RegisterForm\";\r\n\r\nconst LoginButtons = ({removeRegisterErrors, removeRegisterSuccess, getTodos, login, register, loginErrors, registerErrors, successMessage, handleSucceeded, isSubmitting, removeLoginErrors}) => {\r\n    return (\r\n        <>\r\n            <LoginForm handleSucceeded={handleSucceeded} login={login} loginErrors={loginErrors} getTodos={getTodos} isSubmitting={isSubmitting} removeLoginErrors={removeLoginErrors}/>\r\n            <RegisterForm removeRegisterErrors={removeRegisterErrors} removeRegisterSuccess={removeRegisterSuccess} handleSucceeded={handleSucceeded} register={register} registerErrors={registerErrors} successMessage={successMessage} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginButtons;","import { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    AppBar, Box, Button, Container, LinearProgress, Toolbar, Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport LoginButtons from \"./LoginButtons\";\r\n\r\n\r\n//styles\r\nconst useStyles = makeStyles(theme => ({\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    logout: {\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n    progress: {\r\n        marginTop: '64px'\r\n    }\r\n}))\r\n\r\n//element\r\nconst Header = ({isAuth, userName, logout, ...props}) => {\r\n    const styles = useStyles();\r\n    let handleLogout = () => {\r\n        logout();\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <AppBar position={\"fixed\"}>\r\n                <Container fixed>\r\n                    <Toolbar>\r\n                        <Typography variant={\"h6\"} className={styles.title}>Todo list web app</Typography>\r\n                        { isAuth ?\r\n                            <>\r\n                                <Box>\r\n                                    <Typography variant={'h6'}>{userName}</Typography>\r\n                                </Box>\r\n                                <Button className={styles.logout} variant=\"contained\" color=\"secondary\" onClick={handleLogout}>Logout</Button>\r\n                            </>\r\n                            :\r\n                            <LoginButtons { ...props }/>}\r\n                    </Toolbar>\r\n                </Container>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import {\r\n    login,\r\n    logout,\r\n    register,\r\n    removeLoginErrors,\r\n    removeRegisterErrors,\r\n    removeRegisterSuccess\r\n} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport React from 'react';\r\nimport {getTodos} from \"../../redux/todo-reducer\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n\r\n\r\n\r\nconst HeaderContainer = React.memo((props) => {\r\n    return (\r\n        <Header { ...props } />\r\n    )\r\n});\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        userName: state.auth.login,\r\n        loginErrors: state.auth.loginErrors,\r\n        registerErrors: state.auth.registerErrors,\r\n        successMessage: state.auth.successMessage,\r\n        isSubmitting: state.auth.isSubmitting\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login, logout, register, getTodos, removeLoginErrors, removeRegisterErrors, removeRegisterSuccess } )(HeaderContainer);","import {useEffect, useState} from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport {Box, Button, ButtonGroup, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport {createMuiTheme, makeStyles, MuiThemeProvider} from \"@material-ui/core/styles\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport {green, red} from \"@material-ui/core/colors\";\r\nimport * as yup from \"yup\";\r\nlet nounsArray = [\"Idea\", \"Infancy\", \"Infatuation\", \"Inflation\", \"Insanity\", \"Intelligence\", \"Irritation\", \"Joy\", \"Justice\", \"Kindness\", \"Laughter\", \"Law\", \"Liberty\", \"Lie\", \"Life\", \"Loneliness\", \"Loss\", \"Love\", \"Luck\", \"Luxury\", \"Marriage\", \"Mercy\", \"Movement\", \"Nap\", \"Pain\", \"Patience\", \"Peace\", \"Peculiarity\", \"Perseverance\", \"Philosophy\", \"Pleasure\", \"Poverty\", \"Power\", \"Pride\", \"Principle\", \"Reality\", \"Relaxation\", \"Relief\", \"Religion\", \"Restoration\", \"Rhythm\", \"Riches\", \"Right\", \"Rumour\", \"Sacrifice\", \"Sanity\", \"Satisfaction\", \"Self-control\", \"Sensitivity\", \"Service\", \"Shock\", \"Silliness\", \"Skill\", \"Slavery\", \"Sleep\", \"Solitude\", \"Sorrow\", \"Speed\", \"Strength\", \"Strictness\", \"Stupidity\", \"Success\", \"Surprise\", \"Talent\", \"Thought\", \"Thrill\", \"Timing\", \"Tiredness\", \"Tolerance\", \"Trend\", \"Trust\", \"Truth\"];\r\n\r\n//button themes\r\nconst addButton = createMuiTheme({\r\n    palette: {\r\n        primary: green,\r\n        secondary: red,\r\n    }\r\n});\r\n//styles\r\nconst useStyles = makeStyles(theme => ({\r\n    dialog: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    secondaryIcon: {\r\n        marginRight: theme.spacing(0.5),\r\n        transition: 'all 0.3s ease-out',\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n            color: 'purple'\r\n        }\r\n    },\r\n    tags: {\r\n        marginTop: '15px',\r\n        display: 'flex',\r\n        justifyContent: 'space-around'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    addButtons: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        margin: '15px auto',\r\n        minWidth: '400px'\r\n    },\r\n    addButton: {\r\n        flexGrow: 1\r\n    },\r\n    done: {\r\n        color: \"white\"\r\n    }\r\n}));\r\n//validation\r\nconst todoValidationSchema = yup.object({\r\n    title: yup\r\n        .string(`Enter tasks' title`)\r\n        .min(3, 'At least 3 characters')\r\n        .max(30, 'Max 30 characters')\r\n        .required('Title is required'),\r\n    content: yup\r\n        .string(`Enter tasks' content`)\r\n        .min(3, 'At least 3 characters')\r\n        .max(50, 'Max 50 characters')\r\n        .required('Task description is required')\r\n})\r\n//element\r\nconst EditTodo = ({editTodo, editingTodo}) => {\r\n    useEffect(() => {\r\n        setStatus(editingTodo.status)\r\n    }, [editingTodo]);\r\n\r\n\r\n    //styles\r\n    const classes = useStyles();\r\n\r\n    //dialog state\r\n    let [open, setOpen] = useState(false);\r\n    const handleOpen = () => { setOpen(true); }\r\n    const handleClose = () => { setOpen(false); }\r\n\r\n    //button state\r\n    let [disabled, setDisabled] = useState(false);\r\n\r\n    //tags\r\n    const [firstTag, setFirstTag] = useState(editingTodo.tags[0]);\r\n    const [secondTag, setSecondTag] = useState(editingTodo.tags[1]);\r\n    const [thirdTag, setThirdTag] = useState(editingTodo.tags[2]);\r\n    const handleFirstTagChange = (event) => {\r\n        setFirstTag(event.target.value);\r\n    };\r\n    const handleSecondTagChange = (event) => {\r\n        setSecondTag(event.target.value);\r\n    };\r\n    const handleThirdTagChange = (event) => {\r\n        setThirdTag(event.target.value);\r\n    };\r\n\r\n    //status buttons\r\n    const handleCompleted = () => setStatus(true);\r\n    const handleInProgress = () => setStatus(false);\r\n\r\n    //status hook\r\n    let [status, setStatus] = useState(editingTodo.status == true);\r\n\r\n    //formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: editingTodo.title,\r\n            content: editingTodo.content,\r\n            status: editingTodo.status == true,\r\n            tags: [firstTag, secondTag, thirdTag],\r\n            id: editingTodo.id,\r\n            added: editingTodo.added\r\n        },\r\n        validationSchema: todoValidationSchema,\r\n        onSubmit: (values) => {\r\n            setDisabled(true);\r\n            editTodo({...values, tags: [firstTag, secondTag, thirdTag], status: status == true});\r\n            setDisabled(false);\r\n            handleClose();\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <EditIcon className={classes.secondaryIcon} onClick={handleOpen}/>\r\n            <Dialog open={open} onClose={handleClose} maxWidth={'sm'}>\r\n                <DialogTitle>Edit Task</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <DialogContent className={classes.dialog}>\r\n                        <DialogContentText>Edit todo</DialogContentText>\r\n                        <TextField fullWidth id=\"title\" name=\"title\" label=\"Title\" value={formik.values.title}\r\n                                   onChange={formik.handleChange}\r\n                                   error={formik.touched.title && Boolean(formik.errors.title)}\r\n                                   helperText={formik.touched.title && formik.errors.title}/>\r\n                        <TextField fullWidth id=\"content\" name=\"content\" label=\"Content\" value={formik.values.content}\r\n                                   onChange={formik.handleChange}\r\n                                   error={formik.touched.content && Boolean(formik.errors.content)}\r\n                                   helperText={formik.touched.content && formik.errors.content}/>\r\n                        <Box className={classes.tags}>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel>Tag</InputLabel>\r\n                                <Select value={firstTag} onChange={handleFirstTagChange} label=\"Tag\">\r\n                                    <MenuItem value={''}><em>None</em></MenuItem>\r\n                                    {nounsArray.map(x => <MenuItem value={x} key={x}>{x}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel>Tag</InputLabel>\r\n                                <Select value={secondTag} onChange={handleSecondTagChange} label=\"Tag\">\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    {nounsArray.map(x => <MenuItem value={x} key={x}>{x}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel>Tag</InputLabel>\r\n                                <Select value={thirdTag} onChange={handleThirdTagChange} label=\"Tag\">\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    {nounsArray.map(x => <MenuItem value={x} key={x}>{x}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Box>\r\n                        <MuiThemeProvider theme={addButton}>\r\n                            <ButtonGroup className={classes.addButtons} size=\"large\" color=\"primary\">\r\n                                <Button className={`${classes.addButton} ${status && classes.done}`} color={'primary'}\r\n                                        variant={status ? 'contained' : 'outlined'}\r\n                                        onClick={handleCompleted}>Completed</Button>\r\n                                <Button className={classes.addButton} color={'secondary'}\r\n                                        variant={status ? 'outlined' : 'contained'} onClick={handleInProgress}>In\r\n                                    progress</Button>\r\n                            </ButtonGroup>\r\n                        </MuiThemeProvider>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color={\"primary\"}>Cancel</Button>\r\n                        <Button type={'submit'} disabled={disabled} color={\"primary\"}>Edit</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditTodo;","import {useState} from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport {Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Fab, FormControl, InputLabel, MenuItem, Select, TextField} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport * as yup from \"yup\";\r\nlet nounsArray = [\"Idea\", \"Infancy\", \"Infatuation\", \"Inflation\", \"Insanity\", \"Intelligence\", \"Irritation\", \"Joy\", \"Justice\", \"Kindness\", \"Laughter\", \"Law\", \"Liberty\", \"Lie\", \"Life\", \"Loneliness\", \"Loss\", \"Love\", \"Luck\", \"Luxury\", \"Marriage\", \"Mercy\", \"Movement\", \"Nap\", \"Pain\", \"Patience\", \"Peace\", \"Peculiarity\", \"Perseverance\", \"Philosophy\", \"Pleasure\", \"Poverty\", \"Power\", \"Pride\", \"Principle\", \"Reality\", \"Relaxation\", \"Relief\", \"Religion\", \"Restoration\", \"Rhythm\", \"Riches\", \"Right\", \"Rumour\", \"Sacrifice\", \"Sanity\", \"Satisfaction\", \"Self-control\", \"Sensitivity\", \"Service\", \"Shock\", \"Silliness\", \"Skill\", \"Slavery\", \"Sleep\", \"Solitude\", \"Sorrow\", \"Speed\", \"Strength\", \"Strictness\", \"Stupidity\", \"Success\", \"Surprise\", \"Talent\", \"Thought\", \"Thrill\", \"Timing\", \"Tiredness\", \"Tolerance\", \"Trend\", \"Trust\", \"Truth\"];\r\n\r\n//styles\r\nconst useStyles = makeStyles(theme => ({\r\n    addNew: {\r\n        marginLeft: 'auto',\r\n        marginRight: theme.spacing(2.5),\r\n        marginTop: '10px'\r\n    },\r\n    tags: {\r\n        marginTop: '15px',\r\n        display: 'flex',\r\n        justifyContent: 'space-around'\r\n    },\r\n    dialog: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    }\r\n}));\r\n//validation\r\nconst todoValidationSchema = yup.object({\r\n    title: yup\r\n        .string(`Enter tasks' title`)\r\n        .min(3, 'At least 3 characters')\r\n        .max(30, 'Max 30 characters')\r\n        .required('Title is required'),\r\n    content: yup\r\n        .string(`Enter tasks' content`)\r\n        .min(3, 'At least 3 characters')\r\n        .max(50, 'Max 50 characters')\r\n        .required('Task description is required')\r\n})\r\n//element\r\nconst AddNewTodo = ({addTodo}) => {\r\n    //styles\r\n    const classes = useStyles();\r\n\r\n    //dialog state\r\n    const [newTodoState, setNewTodoState] = useState(false);\r\n    const handleOpenNewTodo = () => setNewTodoState(true);\r\n    const handleCloseNewTodo = () => {\r\n        formik.resetForm();\r\n        setFirstTag('');\r\n        setSecondTag('');\r\n        setThirdTag('');\r\n        setNewTodoState(false);\r\n    };\r\n\r\n    //tags state\r\n    const [firstTag, setFirstTag] = useState('');\r\n    const [secondTag, setSecondTag] = useState('');\r\n    const [thirdTag, setThirdTag] = useState('');\r\n    const handleFirstTagChange = (event) => {\r\n        setFirstTag(event.target.value);\r\n    };\r\n    const handleSecondTagChange = (event) => {\r\n        setSecondTag(event.target.value);\r\n    };\r\n    const handleThirdTagChange = (event) => {\r\n        setThirdTag(event.target.value);\r\n    };\r\n\r\n    //form\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: '',\r\n            content: '',\r\n            tags: []\r\n        },\r\n        validationSchema: todoValidationSchema,\r\n        onSubmit: (values) => {\r\n            setDisabled(true);\r\n            addTodo({...values, tags: [firstTag, secondTag, thirdTag]});\r\n            setDisabled(false);\r\n            setFirstTag('');\r\n            setSecondTag('');\r\n            setThirdTag('');\r\n            formik.resetForm();\r\n            handleCloseNewTodo();\r\n        }\r\n    });\r\n\r\n    //button status\r\n    let [disabled, setDisabled] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Fab color=\"secondary\" className={classes.addNew} onClick={handleOpenNewTodo}>\r\n                <AddIcon />\r\n            </Fab>\r\n            <Dialog open={newTodoState} onClose={handleCloseNewTodo} maxWidth={'sm'}>\r\n                <DialogTitle>New Task</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <DialogContent className={classes.dialog}>\r\n                        <DialogContentText>Fill in the gaps</DialogContentText>\r\n                        <TextField fullWidth id=\"title\" name=\"title\" label=\"Title\" value={formik.values.title} onChange={formik.handleChange} error={formik.touched.title && Boolean(formik.errors.title)} helperText={formik.touched.title && formik.errors.title}/>\r\n                        <TextField fullWidth id=\"content\" name=\"content\" label=\"Content\" value={formik.values.content} onChange={formik.handleChange} error={formik.touched.content && Boolean(formik.errors.content)} helperText={formik.touched.content && formik.errors.content}/>\r\n                        <Box className={classes.tags}>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel>Tag</InputLabel>\r\n                                <Select value={firstTag} onChange={handleFirstTagChange} label=\"Tag\">\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    {nounsArray.map(x => <MenuItem value={x} key={x}>{x}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel>Tag</InputLabel>\r\n                                <Select value={secondTag} onChange={handleSecondTagChange} label=\"Tag\">\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    {nounsArray.map(x => <MenuItem value={x} key={x}>{x}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel>Tag</InputLabel>\r\n                                <Select value={thirdTag} onChange={handleThirdTagChange} label=\"Tag\">\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    {nounsArray.map(x => <MenuItem value={x} key={x}>{x}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Box>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleCloseNewTodo} color={\"primary\"}>Cancel</Button>\r\n                        <Button type={'submit'} disabled={disabled} color={\"primary\"}>Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default AddNewTodo;","import React, {useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n    Backdrop,\r\n    Checkbox,\r\n    CircularProgress,\r\n    Container,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    Paper,\r\n    TablePagination,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport EditTodo from \"./EditTodo\";\r\nimport AddNewTodo from \"./AddTodo\";\r\nimport {toggleDoneCheckBox} from \"../../redux/todo-reducer\";\r\n\r\n//styles\r\nconst useStyles = makeStyles(theme => ({\r\n    todos: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: 0\r\n    },\r\n    listItem: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center'\r\n    },\r\n    listItemText: {\r\n        marginRight: '15px'\r\n    },\r\n    chip: {\r\n        marginRight: '10px'\r\n    },\r\n    note: {\r\n        transitionDuration: \"0.3s\",\r\n        '&:hover': {\r\n            backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n            cursor: \"pointer\"\r\n        },\r\n    },\r\n    done: {\r\n        color: \"white\"\r\n    },\r\n    doneNote: {\r\n        transitionDuration: \"0.3s\",\r\n        backgroundColor: \"rgba(104, 62, 182, 0.30)\",\r\n        opacity: \"50%\",\r\n        \"&:hover\": {\r\n            cursor: \"pointer\"\r\n        },\r\n    },\r\n    dates: {\r\n        marginLeft: 'auto',\r\n        marginRight: '30px'\r\n    },\r\n    date: {\r\n        marginRight: '8px'\r\n    },\r\n    paper: {\r\n        paddingBottom: theme.spacing(21),\r\n        borderRadius: '20px',\r\n        minHeight: theme.spacing(40),\r\n        position: 'relative',\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    todolist: {\r\n        marginTop: theme.spacing(12)\r\n    },\r\n    todolistHeader: {\r\n        display: 'flex',\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n        backgroundColor: \"#673AB7\",\r\n        color: 'white',\r\n        borderRadius: '20px 20px 0 0'\r\n    },\r\n    todolistHeaderDates: {\r\n        display: 'flex',\r\n        marginLeft: 'auto',\r\n        marginRight: theme.spacing(8),\r\n        alignItems: 'center'\r\n    },\r\n    todolistHeaderTitle: {\r\n        marginLeft: theme.spacing(8.8),\r\n        fontSize: '18px',\r\n        fontWeight: 'bold'\r\n    },\r\n    todolistHeaderDatesItem: {\r\n        fontSize: '18px',\r\n        marginRight: theme.spacing(7.5),\r\n        marginLeft: theme.spacing(3.5),\r\n        fontWeight: 'bold'\r\n    },\r\n    secondary: {\r\n        marginRight: theme.spacing(0.3),\r\n        paddingTop: '3px',\r\n    },\r\n    secondaryIcon: {\r\n        marginRight: theme.spacing(0.5),\r\n        transition: 'all 0.3s ease-out',\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n            color: 'purple'\r\n        }\r\n    },\r\n    tablePagination: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        right: 0\r\n    },\r\n    addTodo: {\r\n        position: 'absolute',\r\n        bottom: 60,\r\n        right: 0\r\n    },\r\n    message: {\r\n        padding: theme.spacing(6),\r\n        fontSize: '26px'\r\n    },\r\n    unAuthorized: {\r\n        marginTop: theme.spacing(12),\r\n        fontSize: '28px'\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 5,\r\n        color: '#fff',\r\n    },\r\n    progress: {\r\n        marginTop: theme.spacing(16),\r\n        color: 'black',\r\n        position: 'absolute',\r\n        left: '50%'\r\n    }\r\n}))\r\n//element\r\nconst Todolist = ({todos, toggleDone, deleteTodo, addTodo, editTodo, isAuth, isLoading, isSubmitting}) => {\r\n    //styles\r\n    const classes = useStyles();\r\n    //button/checkbox handling\r\n    const handleDelete = (todoId) => () => {\r\n        deleteTodo(todoId);\r\n    };\r\n    const handleToggleDone = (todoId) => () => {\r\n        toggleDone(todoId);\r\n    }\r\n\r\n    //pagination\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(8);\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    if (isAuth === false && !isLoading && !isSubmitting) return <Container className={classes.unAuthorized}><Typography variant={'inherit'}><strong>Login:</strong> demo@mail.ru<br/><strong>Password:</strong> 123321dd</Typography></Container>\r\n\r\n    if (!todos) {\r\n        return (\r\n           <div className={classes.progress}><CircularProgress/></div>\r\n\r\n        )\r\n    }\r\n\r\n    let sliced;\r\n    if (todos && rowsPerPage > 0) {\r\n        sliced = todos.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\r\n    } else {\r\n        sliced = todos;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container className={classes.todolist}>\r\n                <Paper className={classes.paper}>\r\n                    <div className={classes.todolistHeader}>\r\n                        <div className={classes.todolistHeaderTitle}>Task</div>\r\n                        <div className={classes.todolistHeaderDates}>\r\n                            <div className={classes.todolistHeaderDatesItem}>Added</div>\r\n                            <div className={classes.todolistHeaderDatesItem}>Updated</div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                            sliced.length === 0\r\n                            ?\r\n                            <div className={classes.message}>\r\n                                <Typography variant={'inherit'}>Your todolist is empty. Please add some tasks</Typography>\r\n                            </div>\r\n                            :\r\n                            <List className={classes.todos}>\r\n                                {sliced.map(x =>\r\n                                    <ListItem className={x.status ? classes.doneNote : classes.note } key={x.id} onClick={handleToggleDone(x.id)} >\r\n                                        <ListItemIcon>\r\n                                            <Checkbox checked={x.status == true}/>\r\n                                        </ListItemIcon>\r\n                                        <div className={classes.listItem}>\r\n                                            <ListItemText className={classes.listItemText} primary={x.title} secondary={x.content}/>\r\n                                            { x.tags && x.tags.map(x => x && <Chip key={x} variant={\"outlined\"} className={classes.chip} label={x}/>) }\r\n                                        </div>\r\n                                        <div className={classes.dates}>\r\n                                            <Chip variant={\"outlined\"} key={Date.parse(x.added)} className={classes.date} label={new Date(Date.parse(x.added)).toLocaleString()}/>\r\n                                            <Chip variant={\"outlined\"} key={x.updated} className={classes.date} label={new Date(Date.parse(x.updated)).toLocaleString()}/>\r\n                                        </div>\r\n                                        <ListItemSecondaryAction className={classes.secondary}>\r\n                                            <EditTodo editingTodo={x} editTodo={editTodo}/>\r\n                                            <DeleteIcon className={classes.secondaryIcon} onClick={handleDelete(x.id)}/>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                )}\r\n                            </List>\r\n                    }\r\n                    <div className={classes.addTodo} >\r\n                        <AddNewTodo addTodo={addTodo}/>\r\n                    </div>\r\n                    <TablePagination className={classes.tablePagination} rowsPerPageOptions={[8, 16, 25]} component=\"div\" count={todos.length} rowsPerPage={rowsPerPage} page={page} onChangePage={handleChangePage} onChangeRowsPerPage={handleChangeRowsPerPage}/>\r\n                </Paper>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todolist;","import Todolist from \"./Todolist\";\r\nimport {connect} from \"react-redux\";\r\nimport {addTodo, deleteTodo, editTodo, getTodos, toggleDone} from \"../../redux/todo-reducer\";\r\nimport React from 'react';\r\nimport {Backdrop, CircularProgress} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 5,\r\n        color: '#fff',\r\n    }\r\n}))\r\n\r\n\r\n\r\nconst TodolistContainer = React.memo(({isSubmitting, ...props}) => {\r\n    let styles = useStyles();\r\n    if (isSubmitting) {\r\n        return (\r\n            <Backdrop className={styles.backdrop} open={isSubmitting}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        )\r\n    }\r\n    return <Todolist {...props} />\r\n});\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        todos: state.todo.todos,\r\n        isSubmitting: state.auth.isSubmitting,\r\n        isLoading: state.todo.isLoading\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getTodos, toggleDone, deleteTodo, addTodo, editTodo })(TodolistContainer);","import './App.css';\nimport {MuiThemeProvider, createMuiTheme, makeStyles,} from '@material-ui/core/styles';\nimport { deepPurple, red, green } from \"@material-ui/core/colors\";\nimport store from \"./redux/redux-store\";\nimport {connect, Provider} from \"react-redux\";\nimport React from 'react';\nimport { useEffect } from \"react\";\nimport {handleError, initializeApp} from \"./redux/app-reducer\";\nimport {Backdrop, CircularProgress} from \"@material-ui/core\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport TodolistContainer from \"./components/Todos/TodolistContainer\";\n\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: deepPurple,\n        secondary: red,\n        success: green\n    }\n});\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: '#fff',\n    }\n}))\n\n\nconst App = React.memo(({initializeApp, initialized}) => {\n    let styles = useStyles();\n    useEffect(() => {\n        initializeApp();\n    })\n    if (!initialized) {\n        return (\n            <Backdrop className={styles.backdrop} open={!initialized}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        )\n    }\n    return (\n        <div className={styles.body}>\n            <MuiThemeProvider theme={theme}>\n                <HeaderContainer />\n                <TodolistContainer/>\n            </MuiThemeProvider>\n        </div>\n    )\n});\n\n\nconst mapStateToProps = (state) => {\n    return {\n        initialized: state.app.initialized,\n        globalError: state.app.globalError\n    }\n}\n\nlet AppContainer = connect(mapStateToProps, {initializeApp, handleError})(App);\n\nlet Application = () => {\n    return (\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    )\n}\n\nexport default Application;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Application from \"./App\";\n\nReactDOM.render(\n    <Application />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}