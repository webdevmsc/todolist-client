{"version":3,"sources":["reportWebVitals.js","api/api.js","redux/todo-reducer.js","redux/auth-reducer.js","components/Header/LoginForm.jsx","components/Header/RegisterForm.jsx","components/Header/LoginButtons.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.js","redux/redux-store.js","components/Todos/EditTodo.jsx","components/Todos/AddTodo.jsx","components/Todos/Todolist.jsx","components/Todos/TodolistContainer.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","headers","localStorage","token","interceptors","request","use","config","getItem","Authorization","authAPI","get","email","password","post","passwordConfirm","todoAPI","todoId","patch","delete","todo","put","SET_TODOS","SET_EDIT_TODO","TOGGLE_DONE","DELETE_TODO","ADD_TODO","initialState","todos","setTodos","type","payload","setToggleDone","updated","setDeleteTodo","addNewTodo","setEditTodo","getTodos","dispatch","a","response","data","status","toggleDoneCheckBox","todoReducer","state","action","map","id","filter","s","Object","assign","SET_USER_DATA","SET_LOGIN_ERRORS","SET_REGISTER_ERRORS","SET_REGISTER_SUCCEEDED","login","isAuth","loginErrors","registerErrors","setAuthUserData","setRegisterSuccess","message","successMessage","getAuthUserData","authReducer","useStyles","makeStyles","loginForm","display","flexDirection","loginValidationSchema","yup","required","min","LoginForm","styles","useState","loginState","setLoginState","handleCloseLogin","formik","useFormik","initialValues","validationSchema","onSubmit","values","setDisabled","disabled","Box","mr","Button","variant","color","onClick","Dialog","className","open","onClose","maxWidth","DialogTitle","handleSubmit","DialogContent","DialogContentText","TextField","fullWidth","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","DialogActions","registerForm","success","textAlign","registerValidationSchema","oneOf","RegisterForm","register","registerState","setRegisterState","handleCloseRegister","resetForm","setTimeout","onKeyDown","e","key","preventDefault","LoginButtons","handleSucceeded","theme","title","flexGrow","logout","marginLeft","spacing","Header","userName","AppBar","position","Container","fixed","Toolbar","Typography","connect","auth","setItem","removeItem","props","INITIALIZED_SUCCESS","GLOBAL_ERROR","initialized","globalError","errorCreator","appReducer","reducers","combineReducers","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","nounsArray","addButton","createMuiTheme","palette","primary","green","secondary","red","dialog","secondaryIcon","marginRight","transition","cursor","tags","marginTop","justifyContent","formControl","margin","minWidth","addButtons","done","todoValidationSchema","content","EditTodo","editTodo","editingTodo","useEffect","setStatus","classes","setOpen","handleClose","firstTag","setFirstTag","secondTag","setSecondTag","thirdTag","setThirdTag","added","FormControl","InputLabel","Select","event","target","MenuItem","x","ButtonGroup","size","addNew","AddNewTodo","addTodo","newTodoState","setNewTodoState","handleCloseNewTodo","Fab","ma","backgroundColor","background","paper","padding","listItem","alignItems","listItemText","chip","note","transitionDuration","doneNote","opacity","dates","date","paddingBottom","borderRadius","minHeight","marginBottom","todolist","todolistHeader","paddingTop","todolistHeaderDates","todolistHeaderTitle","fontSize","todolistHeaderDatesItem","tablePagination","bottom","right","Todolist","sliced","toggleDone","deleteTodo","handleDelete","handleCheckboxClick","page","setPage","rowsPerPage","setRowsPerPage","slice","Paper","List","ListItem","ListItemIcon","Checkbox","checked","ListItemText","Chip","Date","parse","toLocaleString","ListItemSecondaryAction","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","newPage","onChangeRowsPerPage","parseInt","CircularProgress","deepPurple","AppContainer","initializeApp","handleError","toString","Application","ReactDOM","render","document","getElementById"],"mappings":"qLAYeA,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oECLRQ,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,0BACTC,QAAS,CACL,cAAgB,UAAhB,OAA2BC,aAAaC,UAUhDN,EAASO,aAAaC,QAAQC,KAPA,SAACC,GAC3B,IAAMJ,EAAQD,aAAaM,QAAQ,SAInC,OAHIL,IACAI,EAAON,QAAQQ,cAAf,iBAAyCN,IAEtCI,KAIJ,IAAMG,EAAU,WAEf,OAAOb,EAASc,IAAT,YAFFD,EAAU,SAIbE,EAAOC,GACT,OAAOhB,EAASiB,KAAT,oCAAmD,CAAEF,QAAOC,cAL9DH,EAAU,SAOVE,EAAOC,EAAUE,GACtB,OAAOlB,EAASiB,KAAT,uCAAsD,CAAEF,QAAOC,WAAUE,qBAK3EC,EAAU,WAEf,OAAOnB,EAASc,IAAT,SAFFK,EAAU,SAIRC,GACP,OAAOpB,EAASqB,MAAT,kBAA0BD,KAL5BD,EAAU,SAORC,GACP,OAAOpB,EAASsB,OAAT,kBAA2BF,KAR7BD,EAAU,SAUXI,GACJ,OAAOvB,EAASiB,KAAT,OAAsBM,IAXxBJ,EAAU,SAaVI,GACL,OAAOvB,EAASwB,IAAT,OAAqBD,I,QCzC9BE,EAAY,kBACZC,EAAgB,sBAChBC,EAAc,oBACdC,EAAc,oBACdC,EAAW,iBAGbC,EAAe,CACfC,MAAO,MAgCEC,EAAW,SAACD,GAAD,MAAY,CAACE,KAAMR,EAAWS,QAAS,CAAEH,MAAOA,KAE3DI,EAAgB,SAACf,EAAQgB,GAAT,MAAsB,CAACH,KAAMN,EAAaJ,KAAM,CAAEH,SAAQgB,aAE1EC,EAAgB,SAACjB,GAAD,MAAa,CAACa,KAAML,EAAaR,WAEjDkB,EAAa,SAACf,GAAD,MAAW,CAACU,KAAMJ,EAAUN,SAEzCgB,EAAc,SAAChB,GAAD,MAAW,CAACU,KAAMP,EAAeH,SAG/CiB,EAAW,yDAAM,WAAOC,GAAP,iBAAAC,EAAA,sEACLvB,IADK,OAEG,KADzBwB,EADsB,QAEbC,KAAKC,SACVd,EAAQY,EAASC,KAAKA,KAC1BH,EAAST,EAASD,KAJI,2CAAN,uDAeXe,EAAqB,SAAC1B,GAAD,8CAAY,WAAOqB,GAAP,eAAAC,EAAA,sEACrBvB,EAAmBC,GADE,OAEb,KADzBuB,EADsC,QAE7BC,KAAKC,QACdJ,EAASN,EAAcf,EAAQuB,EAASC,KAAKA,OAHP,2CAAZ,uDA4BnBG,EAlFK,WAAmC,IAAlCC,EAAiC,uDAAzBlB,EAAcmB,EAAW,uCAClD,OAAQA,EAAOhB,MACX,KAAKR,EACD,OAAO,2BAAKuB,GAAUC,EAAOf,SACjC,KAAKP,EACD,OAAO,2BAAKqB,GAAZ,IAAmBjB,MAAOiB,EAAMjB,MAAMmB,KAAI,SAAA3B,GACtC,OAAIA,EAAK4B,KAAOF,EAAO1B,KAAKH,OACjBG,EAEJ,2BACAA,GADP,IAEIsB,QAAStB,EAAKsB,OACdT,QAASa,EAAO1B,KAAKa,eAIjC,KAAKP,EACD,OAAO,2BAAKmB,GAAZ,IAAmBjB,MAAM,CAAEkB,EAAO1B,MAAV,mBAAmByB,EAAMjB,UACrD,KAAKH,EACD,OAAO,2BAAKoB,GAAZ,IAAmBjB,MAAOiB,EAAMjB,MAAMqB,QAAO,SAAA7B,GAAI,OAAIA,EAAK4B,KAAOF,EAAO7B,YAC5E,KAAKM,EACD,OAAO,2BAAKsB,GAAZ,IAAmBjB,MAAOiB,EAAMjB,MAAMmB,KAAI,SAAAG,GAAC,OAAIA,EAAEF,KAAOF,EAAO1B,KAAK4B,GAChEG,OAAOC,OAAO,GAAIF,EAAGJ,EAAO1B,MAAQ8B,OAC5C,QACI,OAAOL,ICnCbQ,EAAgB,sBAChBC,EAAmB,yBACnBC,EAAsB,4BACtBC,EAAyB,+BAG3B7B,EAAe,CACf8B,MAAO,KACPC,QAAQ,EACRC,YAAa,KACbC,eAAgB,MAyBPC,EAAkB,SAACJ,EAAOC,GAAR,MAAoB,CAAC5B,KAAMuB,EAAetB,QAAS,CAAC0B,QAAOC,YAG7EI,EAAqB,SAACC,GAAD,MAAc,CAACjC,KAAM0B,EAAwBzB,QAAS,CAAEiC,eAAgBD,KAG7FE,EAAkB,yDAAM,WAAO3B,GAAP,iBAAAC,EAAA,sEACZ7B,IADY,OAEJ,KADzB8B,EAD6B,QAEpBC,KAAKC,QAAsC,MAAtBF,EAASC,KAAKA,MACxCgB,EAAQjB,EAASC,KAAKA,KAC1BH,EAASuB,EAAgBJ,GAAO,IAChCnB,EAASD,MAGTC,EAASuB,EAAgB,MAAM,IARF,2CAAN,uDA4ChBK,EAvEK,WAAmC,IAAlCrB,EAAiC,uDAAzBlB,EAAcmB,EAAW,uCAClD,OAAQA,EAAOhB,MACX,KAAKuB,EAEL,KAAKE,EAEL,KAAKD,EAEL,KAAKE,EACD,OAAO,2BAAKX,GAAUC,EAAOf,SACjC,QACI,OAAOc,I,sKCtBbsB,GAAYC,aAAW,iBAAO,CAChCC,UAAW,CACPC,QAAS,OACTC,cAAe,cAMjBC,GAAwBC,KAAW,CACrC7D,MAAO6D,KACK,oBACP7D,MAAM,uBACN8D,SAAS,qBACd7D,SAAU4D,KACE,uBACPE,IAAI,EAAG,qDACPD,SAAS,0BAyDHE,GAtDG,SAAC,GAA0B,IAAzBnB,EAAwB,EAAxBA,MAAOE,EAAiB,EAAjBA,YAEjBkB,EAASV,KAFyB,EAKJW,oBAAS,GALL,oBAKjCC,EALiC,KAKrBC,EALqB,KAOlCC,EAAmB,WACrBD,GAAc,IAIZE,EAASC,aAAU,CACrBC,cAAe,CACXxE,MAAO,GACPC,SAAU,IAEdwE,iBAAkBb,GAClBc,SAAU,SAACC,GACPC,GAAY,GACZ/B,EAAM8B,EAAO3E,MAAO2E,EAAO1E,UAC3B2E,GAAY,MArBoB,EA6BVV,oBAAS,GA7BC,oBA6BnCW,EA7BmC,KA6BzBD,EA7ByB,KA+BxC,OACI,gBAACE,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,eAACC,GAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,UAAUC,QA3B3B,kBAAMf,GAAc,IA2BpC,mBACA,gBAACgB,GAAA,EAAD,CAAQC,UAAWpB,EAAOR,UAAW6B,KAAMnB,EAAYoB,QAASlB,EAAkBmB,SAAU,KAA5F,UACI,eAACC,GAAA,EAAD,oBACA,wBAAMf,SAAUJ,EAAOoB,aAAvB,UACI,gBAACC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,mCACA,eAACC,GAAA,EAAD,CAAWC,WAAS,EAAC1D,GAAG,QAAQ2D,KAAK,QAAQC,MAAM,QAAQC,MAAO3B,EAAOK,OAAO3E,MAAOkG,SAAU5B,EAAO6B,aAAcC,MAAO9B,EAAO+B,QAAQrG,OAASsG,QAAQhC,EAAOiC,OAAOvG,OAAQwG,WAAYlC,EAAO+B,QAAQrG,OAASsE,EAAOiC,OAAOvG,QACrO,eAAC6F,GAAA,EAAD,CAAWC,WAAS,EAAC1D,GAAG,WAAW2D,KAAK,WAAWC,MAAM,WAAW9E,KAAK,WAAW+E,MAAO3B,EAAOK,OAAO1E,SAAUiG,SAAU5B,EAAO6B,aAAcC,MAAO9B,EAAO+B,QAAQpG,UAAYqG,QAAQhC,EAAOiC,OAAOtG,UAAWuG,WAAYlC,EAAO+B,QAAQpG,UAAYqE,EAAOiC,OAAOtG,WACxQ8C,GAAe,eAAC6C,GAAA,EAAD,UAAoB7C,OAEzC,gBAAC0D,GAAA,EAAD,WACI,eAACzB,GAAA,EAAD,CAAQG,QAASd,EAAkBa,MAAO,UAA1C,oBACA,eAACF,GAAA,EAAD,CAAQ9D,KAAM,SAAU2D,SAAUA,EAAUK,MAAO,UAAnD,gCChElB3B,GAAYC,aAAW,iBAAO,CAChCkD,aAAc,CACVhD,QAAS,OACTC,cAAe,UAEnBgD,QAAS,CACLC,UAAW,cAKbC,GAA2BhD,KAAW,CACxC7D,MAAO6D,KACK,oBACP7D,MAAM,uBACN8D,SAAS,qBACd7D,SAAU4D,KACE,uBACPE,IAAI,EAAG,qDACPD,SAAS,wBACd3D,gBAAiB0D,KACL,+BACPE,IAAI,EAAG,qDACP+C,MAAM,CAACjD,KAAQ,YAAa,MAAO,wBACnCC,SAAS,0BA0DHiD,GAvDM,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,SAAUhE,EAAoC,EAApCA,eAAgBI,EAAoB,EAApBA,eAAoB,EAIvBc,oBAAS,GAJc,oBAI1D+C,EAJ0D,KAI3CC,EAJ2C,KAM3DC,EAAsB,kBAAMD,GAAiB,IAG7C5C,EAASC,aAAU,CACrBC,cAAe,CACXxE,MAAO,GACPC,SAAU,GACVE,gBAAiB,IAErBsE,iBAAkBoC,GAClBnC,SAAS,WAAD,4BAAE,WAAOC,GAAP,SAAAhD,EAAA,6DACN2C,EAAO8C,YACPxC,GAAY,GAFN,SAGAoC,EAASrC,EAAO3E,MAAO2E,EAAO1E,SAAU0E,EAAOxE,iBAH/C,OAINyE,GAAY,GACZyC,YAAW,kBAAMH,GAAiB,KAAQ,KALpC,2CAAF,mDAAC,KAhBoD,EA0BnChD,oBAAS,GA1B0B,oBA0B5DW,EA1B4D,KA0BlDD,EA1BkD,KA6B7DX,EAASV,KACb,OACI,gBAACuB,EAAA,EAAD,WACI,eAACE,GAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYC,QA3B3B,kBAAM+B,GAAiB,IA2BiCI,UAAW,SAACC,GAAsB,UAAVA,EAAEC,KAAmBD,EAAEE,kBAA1H,qBACA,gBAACrC,GAAA,EAAD,CAAQC,UAAWpB,EAAOyC,aAAcpB,KAAM2B,EAAe1B,QAAS4B,EAAqB3B,SAAU,KAArG,UACI,eAACC,GAAA,EAAD,sBACA,wBAAMf,SAAWJ,EAAOoB,aAAe4B,UAAY,SAACC,GAAsB,UAAVA,EAAEC,KAAiBD,EAAEE,kBAArF,UACI,gBAAC9B,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,4CACA,eAACC,GAAA,EAAD,CAAWC,WAAS,EAAC1D,GAAG,QAAQ2D,KAAK,QAAQC,MAAM,QAAQC,MAAO3B,EAAOK,OAAO3E,MAAOkG,SAAU5B,EAAO6B,aAAcC,MAAO9B,EAAO+B,QAAQrG,OAASsG,QAAQhC,EAAOiC,OAAOvG,OAAQwG,WAAYlC,EAAO+B,QAAQrG,OAASsE,EAAOiC,OAAOvG,QACrO,eAAC6F,GAAA,EAAD,CAAWC,WAAS,EAAC1D,GAAG,WAAW2D,KAAK,WAAWC,MAAM,WAAW9E,KAAK,WAAW+E,MAAO3B,EAAOK,OAAO1E,SAAUiG,SAAU5B,EAAO6B,aAAcC,MAAO9B,EAAO+B,QAAQpG,UAAYqG,QAAQhC,EAAOiC,OAAOtG,UAAWuG,WAAYlC,EAAO+B,QAAQpG,UAAYqE,EAAOiC,OAAOtG,WAC1Q,eAAC4F,GAAA,EAAD,CAAWC,WAAS,EAAC1D,GAAG,QAAQ2D,KAAK,kBAAkBC,MAAM,wBAAwB9E,KAAK,WAAW+E,MAAO3B,EAAOK,OAAOxE,gBAAiB+F,SAAU5B,EAAO6B,aAAcC,MAAO9B,EAAO+B,QAAQlG,iBAAmBmG,QAAQhC,EAAOiC,OAAOpG,iBAAkBqG,WAAYlC,EAAO+B,QAAQlG,iBAAmBmE,EAAOiC,OAAOpG,qBAEzT6C,GAAkB,eAAC4C,GAAA,EAAD,UAAoB5C,IACxC,gBAACyD,GAAA,EAAD,WACI,eAACzB,GAAA,EAAD,CAAQG,QAASgC,EAAqBjC,MAAO,UAA7C,oBACA,eAACF,GAAA,EAAD,CAAQ9D,KAAM,SAAU2D,SAAUA,EAAUK,MAAO,UAAnD,yBAEF9B,GAAkB,eAACwC,GAAA,EAAD,CAAmBP,UAAWpB,EAAO0C,QAArC,SAA+CvD,cCtExEsE,GATM,SAAC,GAA+F,IAA9FjG,EAA6F,EAA7FA,SAAUoB,EAAmF,EAAnFA,MAAOmE,EAA4E,EAA5EA,SAAUjE,EAAkE,EAAlEA,YAAaC,EAAqD,EAArDA,eAAgBI,EAAqC,EAArCA,eAAgBuE,EAAqB,EAArBA,gBAC3F,OACI,uCACI,eAAC,GAAD,CAAWA,gBAAiBA,EAAiB9E,MAAOA,EAAOE,YAAaA,EAAatB,SAAUA,IAC/F,eAAC,GAAD,CAAckG,gBAAiBA,EAAiBX,SAAUA,EAAUhE,eAAgBA,EAAgBI,eAAgBA,QCA1HG,GAAYC,aAAW,SAAAoE,GAAK,MAAK,CACnCC,MAAO,CACHC,SAAU,GAEdC,OAAQ,CACJC,WAAYJ,EAAMK,QAAQ,QA8BnBC,GAzBA,SAAC,GAAyH,IAAxHP,EAAuH,EAAvHA,gBAAiB9E,EAAsG,EAAtGA,MAAOmE,EAA+F,EAA/FA,SAAUe,EAAqF,EAArFA,OAAQjF,EAA6E,EAA7EA,OAAQqF,EAAqE,EAArEA,SAAUpF,EAA2D,EAA3DA,YAAaC,EAA8C,EAA9CA,eAAgBI,EAA8B,EAA9BA,eAAgB3B,EAAc,EAAdA,SAChHwC,EAASV,KAIf,OACI,eAAC6E,EAAA,EAAD,CAAQC,SAAU,QAAlB,SACI,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,gBAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAYxD,QAAS,KAAMI,UAAWpB,EAAO4D,MAA7C,+BACE/E,EACE,uCACI,eAACgC,EAAA,EAAD,UACI,eAAC2D,EAAA,EAAD,CAAYxD,QAAS,KAArB,SAA4BkD,MAEhC,eAACnD,GAAA,EAAD,CAAQK,UAAWpB,EAAO8D,OAAQ9C,QAAQ,YAAYC,MAAM,YAAYC,QAb7E,WACf4C,KAYoB,uBAGJ,eAAC,GAAD,CAAcJ,gBAAiBA,EAAiB9E,MAAOA,EAAOmE,SAAUA,EAAUjE,YAAaA,EAAaC,eAAgBA,EAAgBI,eAAgBA,EAAgB3B,SAAUA,YCd/LiH,gBAVO,SAACzG,GACnB,MAAO,CACHa,OAAQb,EAAM0G,KAAK7F,OACnBqF,SAAUlG,EAAM0G,KAAK9F,MACrBE,YAAad,EAAM0G,KAAK5F,YACxBC,eAAgBf,EAAM0G,KAAK3F,eAC3BI,eAAgBnB,EAAM0G,KAAKvF,kBAIK,CAAEP,MLqCrB,SAAC7C,EAAOC,GAAR,8CAAqB,WAAOyB,GAAP,iBAAAC,EAAA,sEACjB7B,EAAcE,EAAOC,GADJ,OAET,KADzB2B,EADkC,QAEzBC,KAAKC,QACdxC,aAAasJ,QAAQ,QAAShH,EAASC,KAAKA,MAC5CH,EAAS2B,OAGLF,EAAUvB,EAASC,KAAKsB,QAC5BzB,EA/BwC,CAACR,KAAMwB,EAAkBvB,QAAS,CAAE4B,YA+BpDI,MARU,2CAArB,uDKrC4B4E,OLkD3B,kBAAM,SAACrG,GACzBpC,aAAauJ,WAAW,SACxBnH,EAASuB,EAAgB,KAAM,OAC/BvB,EAAST,EAAS,SKrDmC+F,SLyDjC,SAAChH,EAAOC,EAAUE,GAAlB,8CAAsC,WAAOuB,GAAP,eAAAC,EAAA,sEACrC7B,EAAiBE,EAAOC,EAAUE,GADG,OAE7B,KADzByB,EADsD,QAE7CC,KAAKC,OACdJ,GA7C0BsB,EA6CCpB,EAASC,KAAK0E,OA7CK,CAACrF,KAAMyB,EAAqBxB,QAAS,CAAE6B,sBAgDrFtB,EAASwB,EAAmBtB,EAASC,KAAKsB,UAC1CkE,YAAW,kBAAM3F,EAASwB,EAAmB,SAAQ,OAPC,iCA1C7B,IAACF,IA0C4B,OAAtC,uDKzD2CvB,YAApDiH,EAhBS,SAACI,GACrB,OACI,eAAC,GAAD,eAAaA,O,+CCLfC,GAAsB,sBACtBC,GAAe,eAEjBjI,GAAe,CACfkI,aAAa,EACbC,YAAa,MAoBJC,GAAe,SAAC/C,GAAD,MAAY,CAAClF,KAAM8H,GAAc5C,MAAOA,IAerDgD,GAhCI,WAAmC,IAAlCnH,EAAiC,uDAAzBlB,GAAcmB,EAAW,uCACjD,OAAQA,EAAOhB,MACX,KAAK6H,GACD,OAAO,2BACA9G,GADP,IAEIgH,aAAa,IAErB,KAAKD,GACD,OAAO,2BACA/G,GADP,IAEIiH,YAAahH,EAAOkE,QAE5B,QACI,OAAOnE,ICjBfoH,GAAWC,aAAgB,CAC3BX,KAAMrF,EACNiG,IAAKH,GACL5I,KAAMwB,IAGJwH,GAAmBC,OAAOC,sCAAwCC,KAGzDC,GAFDC,aAAYR,GAAUG,GAAiBM,aAAgBC,Q,gMCNjEC,GAAa,CAAC,OAAQ,UAAW,cAAe,YAAa,WAAY,eAAgB,aAAc,MAAO,UAAW,WAAY,WAAY,MAAO,UAAW,MAAO,OAAQ,aAAc,OAAQ,OAAQ,OAAQ,SAAU,WAAY,QAAS,WAAY,MAAO,OAAQ,WAAY,QAAS,cAAe,eAAgB,aAAc,WAAY,UAAW,QAAS,QAAS,YAAa,UAAW,aAAc,SAAU,WAAY,cAAe,SAAU,SAAU,QAAS,SAAU,YAAa,SAAU,eAAgB,eAAgB,cAAe,UAAW,QAAS,YAAa,QAAS,UAAW,QAAS,WAAY,SAAU,QAAS,WAAY,aAAc,YAAa,UAAW,WAAY,SAAU,UAAW,SAAU,SAAU,YAAa,YAAa,QAAS,QAAS,SAGnyBC,GAAYC,YAAe,CAC7BC,QAAS,CACLC,QAASC,KACTC,UAAWC,QAIbhH,GAAYC,aAAW,SAAAoE,GAAK,MAAK,CACnC4C,OAAQ,CACJ9G,QAAS,OACTC,cAAe,UAEnB8G,cAAe,CACXC,YAAa9C,EAAMK,QAAQ,IAC3B0C,WAAY,oBACZ,UAAW,CACPC,OAAQ,UACR1F,MAAO,WAGf2F,KAAM,CACFC,UAAW,OACXpH,QAAS,OACTqH,eAAgB,gBAEpBC,YAAa,CACTC,OAAQrD,EAAMK,QAAQ,GACtBiD,SAAU,KAEdC,WAAY,CACRzH,QAAS,OACTqH,eAAgB,SAChBE,OAAQ,YACRC,SAAU,SAEdjB,UAAW,CACPnC,SAAU,GAEdsD,KAAM,CACFlG,MAAO,aAITmG,GAAuBxH,KAAW,CACpCgE,MAAOhE,KAAA,sBAEFC,SAAS,qBACdwH,QAASzH,KAAA,wBAEJE,IAAI,EAAG,wDACPD,SAAS,kCA+HHyH,GA5HE,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YACzBC,qBAAU,WACNC,EAAUF,EAAY3J,UACvB,CAAC2J,IAIJ,IAAMG,EAAUrI,KAP0B,EAUpBW,oBAAS,GAVW,oBAUrCoB,EAVqC,KAU/BuG,EAV+B,KAYpCC,EAAc,WAAQD,GAAQ,IAZM,EAeZ3H,oBAAS,GAfG,oBAerCW,EAfqC,KAe3BD,EAf2B,OAkBVV,mBAASuH,EAAYZ,KAAK,IAlBhB,oBAkBnCkB,EAlBmC,KAkBzBC,EAlByB,OAmBR9H,mBAASuH,EAAYZ,KAAK,IAnBlB,oBAmBnCoB,EAnBmC,KAmBxBC,EAnBwB,OAoBVhI,mBAASuH,EAAYZ,KAAK,IApBhB,oBAoBnCsB,EApBmC,KAoBzBC,EApByB,OAoChBlI,mBAA+B,GAAtBuH,EAAY3J,QApCL,oBAoCrCA,EApCqC,KAoC7B6J,EApC6B,KAuCpCrH,EAASC,aAAU,CACrBC,cAAe,CACXqD,MAAO4D,EAAY5D,MACnByD,QAASG,EAAYH,QACrBxJ,OAA8B,GAAtB2J,EAAY3J,OACpB+I,KAAM,CAACkB,EAAUE,EAAWE,GAC5B/J,GAAIqJ,EAAYrJ,GAChBiK,MAAOZ,EAAYY,OAEvB5H,iBAAkB4G,GAClB3G,SAAU,SAACC,GACPC,GAAY,GACZ4G,EAAS,2BAAI7G,GAAL,IAAakG,KAAM,CAACkB,EAAUE,EAAWE,GAAWrK,YAC5D8C,GAAY,GACZN,EAAO8C,YACP0E,OAIR,OACI,uCACI,eAAC,KAAD,CAAUzG,UAAWuG,EAAQnB,cAAetF,QAjDjC,WAAQ0G,GAAQ,MAkD3B,gBAACzG,GAAA,EAAD,CAAQE,KAAMA,EAAMC,QAASuG,EAAatG,SAAU,KAApD,UACI,eAACC,GAAA,EAAD,wBACA,wBAAMf,SAAUJ,EAAOoB,aAAvB,UACI,gBAACC,GAAA,EAAD,CAAeN,UAAWuG,EAAQpB,OAAlC,UACI,eAAC5E,GAAA,EAAD,wBACA,eAACC,GAAA,EAAD,CAAWC,WAAS,EAAC1D,GAAG,QAAQ2D,KAAK,QAAQC,MAAM,QAAQC,MAAO3B,EAAOK,OAAOkD,MACrE3B,SAAU5B,EAAO6B,aACjBC,MAAO9B,EAAO+B,QAAQwB,OAASvB,QAAQhC,EAAOiC,OAAOsB,OACrDrB,WAAYlC,EAAO+B,QAAQwB,OAASvD,EAAOiC,OAAOsB,QAC7D,eAAChC,GAAA,EAAD,CAAWC,WAAS,EAAC1D,GAAG,UAAU2D,KAAK,UAAUC,MAAM,UAAUC,MAAO3B,EAAOK,OAAO2G,QAC3EpF,SAAU5B,EAAO6B,aACjBC,MAAO9B,EAAO+B,QAAQiF,SAAWhF,QAAQhC,EAAOiC,OAAO+E,SACvD9E,WAAYlC,EAAO+B,QAAQiF,SAAWhH,EAAOiC,OAAO+E,UAC/D,gBAACxG,EAAA,EAAD,CAAKO,UAAWuG,EAAQf,KAAxB,UACI,gBAACyB,GAAA,EAAD,CAAarH,QAAQ,WAAWI,UAAWuG,EAAQZ,YAAnD,UACI,eAACuB,GAAA,EAAD,kBACA,gBAACC,GAAA,EAAD,CAAQvG,MAAO8F,EAAU7F,SAxDxB,SAACuG,GAC1BT,EAAYS,EAAMC,OAAOzG,QAuDwDD,MAAM,MAA/D,UACI,eAAC2G,GAAA,EAAD,CAAU1G,MAAM,GAAhB,SACI,yCAEH+D,GAAW7H,KAAI,SAAAyK,GAAC,OAAI,eAACD,GAAA,EAAD,CAAU1G,MAAO2G,EAAjB,SAA6BA,GAAJA,YAGtD,gBAACN,GAAA,EAAD,CAAarH,QAAQ,WAAWI,UAAWuG,EAAQZ,YAAnD,UACI,eAACuB,GAAA,EAAD,kBACA,gBAACC,GAAA,EAAD,CAAQvG,MAAOgG,EAAW/F,SA9DxB,SAACuG,GAC3BP,EAAaO,EAAMC,OAAOzG,QA6DyDD,MAAM,MAAjE,UACI,eAAC2G,GAAA,EAAD,CAAU1G,MAAM,GAAhB,SACI,yCAEH+D,GAAW7H,KAAI,SAAAyK,GAAC,OAAI,eAACD,GAAA,EAAD,CAAU1G,MAAO2G,EAAjB,SAA6BA,GAAJA,YAGtD,gBAACN,GAAA,EAAD,CAAarH,QAAQ,WAAWI,UAAWuG,EAAQZ,YAAnD,UACI,eAACuB,GAAA,EAAD,kBACA,gBAACC,GAAA,EAAD,CAAQvG,MAAOkG,EAAUjG,SApExB,SAACuG,GAC1BL,EAAYK,EAAMC,OAAOzG,QAmEwDD,MAAM,MAA/D,UACI,eAAC2G,GAAA,EAAD,CAAU1G,MAAM,GAAhB,SACI,yCAEH+D,GAAW7H,KAAI,SAAAyK,GAAC,OAAI,eAACD,GAAA,EAAD,CAAU1G,MAAO2G,EAAjB,SAA6BA,GAAJA,eAI1D,eAAC,IAAD,CAAkBhF,MAAOqC,GAAzB,SACI,gBAAC4C,GAAA,EAAD,CAAaxH,UAAWuG,EAAQT,WAAY2B,KAAK,QAAQ5H,MAAM,UAA/D,UACI,eAACF,GAAA,EAAD,CAAQK,UAAS,UAAKuG,EAAQ3B,UAAb,YAA0BnI,GAAU8J,EAAQR,MAAQlG,MAAO,UACpED,QAASnD,EAAS,YAAc,WAChCqD,QA3EZ,kBAAMwG,GAAU,IAyEZ,uBAGA,eAAC3G,GAAA,EAAD,CAAQK,UAAWuG,EAAQ3B,UAAW/E,MAAO,YACrCD,QAASnD,EAAS,WAAa,YAAaqD,QA5EvD,kBAAMwG,GAAU,IA2Eb,iCAMZ,gBAAClF,GAAA,EAAD,WACI,eAACzB,GAAA,EAAD,CAAQG,QAAS2G,EAAa5G,MAAO,UAArC,oBACA,eAACF,GAAA,EAAD,CAAQ9D,KAAM,SAAU2D,SAAUA,EAAUK,MAAO,UAAnD,+B,+BC7KpB8E,GAAa,CAAC,OAAQ,UAAW,cAAe,YAAa,WAAY,eAAgB,aAAc,MAAO,UAAW,WAAY,WAAY,MAAO,UAAW,MAAO,OAAQ,aAAc,OAAQ,OAAQ,OAAQ,SAAU,WAAY,QAAS,WAAY,MAAO,OAAQ,WAAY,QAAS,cAAe,eAAgB,aAAc,WAAY,UAAW,QAAS,QAAS,YAAa,UAAW,aAAc,SAAU,WAAY,cAAe,SAAU,SAAU,QAAS,SAAU,YAAa,SAAU,eAAgB,eAAgB,cAAe,UAAW,QAAS,YAAa,QAAS,UAAW,QAAS,WAAY,SAAU,QAAS,WAAY,aAAc,YAAa,UAAW,WAAY,SAAU,UAAW,SAAU,SAAU,YAAa,YAAa,QAAS,QAAS,SAGnyBzG,GAAYC,aAAW,SAAAoE,GAAK,MAAK,CACnCmF,OAAQ,CACJ/E,WAAY,OACZ0C,YAAa9C,EAAMK,QAAQ,KAC3B6C,UAAW,QAEfD,KAAM,CACFC,UAAW,OACXpH,QAAS,OACTqH,eAAgB,gBAEpBP,OAAQ,CACJ9G,QAAS,OACTC,cAAe,UAEnBqH,YAAa,CACTC,OAAQrD,EAAMK,QAAQ,GACtBiD,SAAU,SAIZG,GAAuBxH,KAAW,CACpCgE,MAAOhE,KAAA,sBAEFC,SAAS,qBACdwH,QAASzH,KAAA,wBAEJE,IAAI,EAAG,wDACPD,SAAS,kCA4GHkJ,GAzGI,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEXrB,EAAUrI,KAFc,EAKUW,oBAAS,GALnB,oBAKvBgJ,EALuB,KAKTC,EALS,KAOxBC,EAAqB,WACvB9I,EAAO8C,YACP4E,EAAY,IACZE,EAAa,IACbE,EAAY,IACZe,GAAgB,IAZU,EAgBEjJ,mBAAS,IAhBX,oBAgBvB6H,EAhBuB,KAgBbC,EAhBa,OAiBI9H,mBAAS,IAjBb,oBAiBvB+H,EAjBuB,KAiBZC,EAjBY,OAkBEhI,mBAAS,IAlBX,oBAkBvBiI,EAlBuB,KAkBbC,EAlBa,KA8BxB9H,EAASC,aAAU,CACrBC,cAAe,CACXqD,MAAO,GACPyD,QAAS,GACTT,KAAM,IAEVpG,iBAAkB4G,GAClB3G,SAAU,SAACC,GACPC,GAAY,GACZqI,EAAQ,2BAAItI,GAAL,IAAakG,KAAM,CAACkB,EAAUE,EAAWE,MAChDvH,GAAY,GACZoH,EAAY,IACZE,EAAa,IACbE,EAAY,IACZ9H,EAAO8C,YACPgG,OA7CsB,EAkDAlJ,oBAAS,GAlDT,oBAkDzBW,EAlDyB,KAkDfD,EAlDe,KAoD9B,OACI,uCACI,eAACyI,GAAA,EAAD,CAAKnI,MAAM,YAAYG,UAAWuG,EAAQmB,OAAQ5H,QAhDhC,kBAAMgI,GAAgB,IAgDxC,SACI,eAAC,KAAD,MAEJ,gBAAC/H,GAAA,EAAD,CAAQE,KAAM4H,EAAc3H,QAAS6H,EAAoB5H,SAAU,KAAM8H,IAAE,EAA3E,UACI,eAAC7H,GAAA,EAAD,uBACA,wBAAMf,SAAUJ,EAAOoB,aAAvB,UACI,gBAACC,GAAA,EAAD,CAAeN,UAAWuG,EAAQpB,OAAlC,UACI,eAAC5E,GAAA,EAAD,+BACA,eAACC,GAAA,EAAD,CAAWC,WAAS,EAAC1D,GAAG,QAAQ2D,KAAK,QAAQC,MAAM,QAAQC,MAAO3B,EAAOK,OAAOkD,MAAO3B,SAAU5B,EAAO6B,aAAcC,MAAO9B,EAAO+B,QAAQwB,OAASvB,QAAQhC,EAAOiC,OAAOsB,OAAQrB,WAAYlC,EAAO+B,QAAQwB,OAASvD,EAAOiC,OAAOsB,QACrO,eAAChC,GAAA,EAAD,CAAWC,WAAS,EAAC1D,GAAG,UAAU2D,KAAK,UAAUC,MAAM,UAAUC,MAAO3B,EAAOK,OAAO2G,QAASpF,SAAU5B,EAAO6B,aAAcC,MAAO9B,EAAO+B,QAAQiF,SAAWhF,QAAQhC,EAAOiC,OAAO+E,SAAU9E,WAAYlC,EAAO+B,QAAQiF,SAAWhH,EAAOiC,OAAO+E,UACnP,gBAACxG,EAAA,EAAD,CAAKO,UAAWuG,EAAQf,KAAxB,UACI,gBAACyB,GAAA,EAAD,CAAarH,QAAQ,WAAWI,UAAWuG,EAAQZ,YAAnD,UACI,eAACuB,GAAA,EAAD,kBACA,gBAACC,GAAA,EAAD,CAAQvG,MAAO8F,EAAU7F,SAhDxB,SAACuG,GAC1BT,EAAYS,EAAMC,OAAOzG,QA+CwDD,MAAM,MAA/D,UACI,eAAC2G,GAAA,EAAD,CAAU1G,MAAM,GAAhB,SACI,yCAEH+D,GAAW7H,KAAI,SAAAyK,GAAC,OAAI,eAACD,GAAA,EAAD,CAAU1G,MAAO2G,EAAjB,SAA6BA,GAAJA,YAGtD,gBAACN,GAAA,EAAD,CAAarH,QAAQ,WAAWI,UAAWuG,EAAQZ,YAAnD,UACI,eAACuB,GAAA,EAAD,kBACA,gBAACC,GAAA,EAAD,CAAQvG,MAAOgG,EAAW/F,SAtDxB,SAACuG,GAC3BP,EAAaO,EAAMC,OAAOzG,QAqDyDD,MAAM,MAAjE,UACI,eAAC2G,GAAA,EAAD,CAAU1G,MAAM,GAAhB,SACI,yCAEH+D,GAAW7H,KAAI,SAAAyK,GAAC,OAAI,eAACD,GAAA,EAAD,CAAU1G,MAAO2G,EAAjB,SAA6BA,GAAJA,YAGtD,gBAACN,GAAA,EAAD,CAAarH,QAAQ,WAAWI,UAAWuG,EAAQZ,YAAnD,UACI,eAACuB,GAAA,EAAD,kBACA,gBAACC,GAAA,EAAD,CAAQvG,MAAOkG,EAAUjG,SA5DxB,SAACuG,GAC1BL,EAAYK,EAAMC,OAAOzG,QA2DwDD,MAAM,MAA/D,UACI,eAAC2G,GAAA,EAAD,CAAU1G,MAAM,GAAhB,SACI,yCAEH+D,GAAW7H,KAAI,SAAAyK,GAAC,OAAI,eAACD,GAAA,EAAD,CAAU1G,MAAO2G,EAAjB,SAA6BA,GAAJA,kBAK9D,gBAACnG,GAAA,EAAD,WACI,eAACzB,GAAA,EAAD,CAAQG,QAASiI,EAAoBlI,MAAO,UAA5C,oBACA,eAACF,GAAA,EAAD,CAAQ9D,KAAM,SAAU2D,SAAUA,EAAUK,MAAO,UAAnD,8BC9HlB3B,GAAYC,aAAW,SAAAoE,GAAK,MAAK,CACnC5G,MAAO,CACH0C,QAAS,OACTC,cAAe,SACf0E,SAAU,WACVkF,gBAAiB3F,EAAMuC,QAAQqD,WAAWC,MAC1CC,QAAS,GAEbC,SAAU,CACNjK,QAAS,OACTC,cAAe,MACfiK,WAAY,UAEhBC,aAAc,CACVnD,YAAa,QAEjBoD,KAAM,CACFpD,YAAa,QAEjBqD,KAAM,CACFC,mBAAoB,OACpB,UAAW,CACPT,gBAAiB,sBACjB3C,OAAQ,YAGhBQ,KAAM,CACFlG,MAAO,SAEX+I,SAAU,CACND,mBAAoB,OACpBT,gBAAiB,2BACjBW,QAAS,MACT,UAAW,CACPtD,OAAQ,YAGhBuD,MAAO,CACHnG,WAAY,OACZ0C,YAAa,QAEjB0D,KAAM,CACF1D,YAAa,OAEjB+C,MAAO,CACHY,cAAezG,EAAMK,QAAQ,IAC7BqG,aAAc,OACdC,UAAW3G,EAAMK,QAAQ,IACzBI,SAAU,WACVmG,aAAc5G,EAAMK,QAAQ,IAEhCwG,SAAU,CACN3D,UAAWlD,EAAMK,QAAQ,KAE7ByG,eAAgB,CACZhL,QAAS,OACTiL,WAAY/G,EAAMK,QAAQ,GAC1BoG,cAAezG,EAAMK,QAAQ,GAC7BsF,gBAAiB,UACjBrI,MAAO,QACPoJ,aAAc,iBAElBM,oBAAqB,CACjBlL,QAAS,OACTsE,WAAY,OACZ0C,YAAa9C,EAAMK,QAAQ,GAC3B2F,WAAY,UAEhBiB,oBAAqB,CACjB7G,WAAYJ,EAAMK,QAAQ,KAC1B6G,SAAU,QAEdC,wBAAyB,CACrBD,SAAU,OACVpE,YAAa9C,EAAMK,QAAQ,KAC3BD,WAAYJ,EAAMK,QAAQ,IAE9BqC,UAAW,CACPI,YAAa9C,EAAMK,QAAQ,IAC3B0G,WAAY,OAEhBlE,cAAe,CACXC,YAAa9C,EAAMK,QAAQ,IAC3B0C,WAAY,oBACZ,UAAW,CACPC,OAAQ,UACR1F,MAAO,WAGf8J,gBAAiB,CACb3G,SAAU,WACV4G,OAAQ,EACRC,MAAO,GAEXjC,QAAS,CACL5E,SAAU,WACV4G,OAAQ,GACRC,MAAO,OA+EAC,GA3EE,SAAC,GAAwD,IA6BlEC,EA7BWpO,EAAsD,EAAtDA,MAAOqO,EAA+C,EAA/CA,WAAYC,EAAmC,EAAnCA,WAAYrC,EAAuB,EAAvBA,QAASzB,EAAc,EAAdA,SAEjDI,EAAUrI,KAEVgM,EAAe,SAAClP,GAAD,OAAY,WAC7BiP,EAAWjP,KAKTmP,EAAsB,SAACnP,GAAD,OAAY,WACpC0B,EAAmB1B,KAX8C,EAe7C6D,mBAAS,GAfoC,oBAe9DuL,EAf8D,KAexDC,EAfwD,OAgB/BxL,mBAAS,GAhBsB,oBAgB9DyL,EAhB8D,KAgBjDC,EAhBiD,KA0BrE,OAAK5O,GAKDoO,EADAO,EAAc,EACL3O,EAAM6O,MAAMJ,EAAOE,EAAaF,EAAOE,EAAcA,GAErD3O,EAIT,eAACsH,EAAA,EAAD,CAAWjD,UAAWuG,EAAQ6C,SAA9B,SACI,gBAACqB,GAAA,EAAD,CAAOzK,UAAWuG,EAAQ6B,MAA1B,UACI,uBAAKpI,UAAWuG,EAAQ8C,eAAxB,UACI,sBAAKrJ,UAAWuG,EAAQiD,oBAAxB,kBACA,uBAAKxJ,UAAWuG,EAAQgD,oBAAxB,UACI,sBAAKvJ,UAAWuG,EAAQmD,wBAAxB,mBACA,sBAAK1J,UAAWuG,EAAQmD,wBAAxB,2BAGR,eAACgB,GAAA,EAAD,CAAM1K,UAAWuG,EAAQ5K,MAAzB,SACKoO,EAAOjN,KAAI,SAAAyK,GAAC,OACT,gBAACoD,GAAA,EAAD,CAAU3K,UAAWuH,EAAE9K,OAAS8J,EAAQqC,SAAWrC,EAAQmC,KAAkB5I,SAzCvE9E,EAyCiGuM,EAAExK,GAzCxF,WACjCiN,EAAWhP,KAwCK,UACI,eAAC4P,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAUC,QAAqB,GAAZvD,EAAE9K,OAAgBqD,QAASqK,EAAoB5C,EAAExK,QAExE,uBAAKiD,UAAWuG,EAAQ+B,SAAxB,UACI,eAACyC,GAAA,EAAD,CAAc/K,UAAWuG,EAAQiC,aAAczD,QAASwC,EAAE/E,MAAOyC,UAAWsC,EAAEtB,UAC5EsB,EAAE/B,MAAQ+B,EAAE/B,KAAK1I,KAAI,SAAAyK,GAAC,OAAIA,GAAK,eAACyD,GAAA,EAAD,CAAiBpL,QAAS,WAAYI,UAAWuG,EAAQkC,KAAM9H,MAAO4G,GAA3DA,EAAExK,UAElD,uBAAKiD,UAAWuG,EAAQuC,MAAxB,UACI,eAACkC,GAAA,EAAD,CAAMpL,QAAS,WAA0BI,UAAWuG,EAAQwC,KAAMpI,MAAO,IAAIsK,KAAKA,KAAKC,MAAM3D,EAAEP,QAAQmE,kBAAvE5D,EAAEP,OAClC,eAACgE,GAAA,EAAD,CAAMpL,QAAS,WAA4BI,UAAWuG,EAAQwC,KAAMpI,MAAO,IAAIsK,KAAKA,KAAKC,MAAM3D,EAAEvL,UAAUmP,kBAA3E5D,EAAEvL,YAEtC,gBAACoP,GAAA,EAAD,CAAyBpL,UAAWuG,EAAQtB,UAA5C,UACI,eAAC,GAAD,CAAUmB,YAAamB,EAAGpB,SAAUA,IACpC,eAAC,KAAD,CAAYnG,UAAWuG,EAAQnB,cAAetF,QAASoK,EAAa3C,EAAExK,WAdPwK,EAAExK,IAzCpE,IAAC/B,OA2Dd,sBAAKgF,UAAWuG,EAAQqB,QAAxB,SACI,eAAC,GAAD,CAAYA,QAASA,MAEzB,eAACyD,GAAA,EAAD,CAAiBrL,UAAWuG,EAAQoD,gBAAiB2B,mBAAoB,CAAC,EAAG,GAAI,IAAKC,UAAU,MAAMC,MAAO7P,EAAM8P,OAAQnB,YAAaA,EAAaF,KAAMA,EAAMsB,aApDpJ,SAACtE,EAAOuE,GAC7BtB,EAAQsB,IAmDiMC,oBAjD7K,SAACxE,GAC7BmD,EAAesB,SAASzE,EAAMC,OAAOzG,MAAO,KAC5CyJ,EAAQ,YAIO,eAACyB,GAAA,EAAD,KC1HRzI,gBANO,SAACzG,GACnB,MAAO,CACHjB,MAAOiB,EAAMzB,KAAKQ,SAIc,CAAES,WAAU4N,WZ+C1B,SAAChP,GAAD,8CAAY,WAAOqB,GAAP,eAAAC,EAAA,sEACbvB,EAAmBC,GADN,OAEL,KADzBuB,EAD8B,QAErBC,KAAKC,QACdJ,EAASN,EAAcf,EAAQuB,EAASC,KAAKA,OAHf,2CAAZ,uDY/CsCyN,WZ6DtC,SAACjP,GAAD,8CAAY,WAAOqB,GAAP,SAAAC,EAAA,sEACbvB,EAAmBC,GADN,OAEL,IAFK,OAErBwB,KAAKC,QACdJ,EAASJ,EAAcjB,IAHO,2CAAZ,uDY7DkD4M,QZoErD,SAACzM,GAAD,8CAAU,WAAOkB,GAAP,eAAAC,EAAA,sEACRvB,EAAgBI,GADR,OAEA,KADzBoB,EADyB,QAEhBC,KAAKC,QACdJ,EAASH,EAAW,2BAAIf,GAAL,IAAW4B,GAAIR,EAASC,KAAKA,KAAKO,GAAIiK,MAAOzK,EAASC,KAAKA,KAAKwK,MAAOhL,QAASO,EAASC,KAAKA,KAAKwK,UAH7F,2CAAV,uDYpE8Db,SZ2E7D,SAAChL,GAAD,8CAAU,WAAOkB,GAAP,eAAAC,EAAA,sEACTvB,EAAiBI,GADR,OAED,KADzBoB,EAD0B,QAEjBC,KAAKC,QACdJ,EAASF,EAAYI,EAASC,KAAKA,OAHT,2CAAV,uDY3EuEE,sBAAhF2G,EATW,SAACI,GACvB,OAAO,eAAC,GAAD,eAAcA,OCInBlB,GAAQsC,YAAe,CACzBC,QAAS,CACLC,QAASgH,KACT9G,UAAWC,KACX5D,QAAS0D,QAqBjB,IAOIgH,GAAe3I,aAPK,SAACzG,GACrB,MAAO,CACHgH,YAAahH,EAAMsH,IAAIN,YACvBC,YAAajH,EAAMsH,IAAIL,eAIa,CAACoI,cNbhB,yDAAM,WAAO5P,GAAP,SAAAC,EAAA,sEACzBD,EAAS2B,KADgB,OAE/B3B,EAJqC,CAACR,KAAM6H,KAEb,2CAAN,uDMa+BwI,YNTjC,SAACnL,GAAD,8CAAW,WAAO1E,GAAP,SAAAC,EAAA,sEAC5BD,EAASyH,GAAa/C,EAAMoL,aADA,OAElCnK,YAAW,kBAAM3F,EAASyH,GAAa,SAAQ,KAFb,2CAAX,wDMSRT,EAxBnB,YAA4C,IAA9B4I,EAA6B,EAA7BA,cAAerI,EAAc,EAAdA,YAIzB,OAHAyC,qBAAU,WACN4F,OAECrI,EAIL,qCACQ,gBAAC,IAAD,CAAkBrB,MAAOA,GAAzB,UACI,eAAC,GAAD,IACA,eAAC,GAAD,SAND,eAACuJ,GAAA,EAAD,OA6BAM,GARG,WACd,OACI,eAAC,IAAD,CAAU7H,MAAOA,GAAjB,SACI,eAACyH,GAAD,OC1CZK,IAASC,OACL,eAAC,GAAD,IACFC,SAASC,eAAe,SAM1BrT,M","file":"static/js/main.80dc238e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://localhost:5001/',\r\n    headers: {\r\n        'Authorization': `Bearer ${localStorage.token}`\r\n    }\r\n});\r\nconst checkTokenInterceptor = (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n};\r\ninstance.interceptors.request.use(checkTokenInterceptor);\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password) {\r\n        return instance.post(`https://localhost:5001/auth/login`, { email, password });\r\n    },\r\n    register(email, password, passwordConfirm) {\r\n        return instance.post(`https://localhost:5001/auth/register`, { email, password, passwordConfirm } );\r\n    }\r\n}\r\n\r\n\r\nexport const todoAPI = {\r\n    getAll() {\r\n        return instance.get(`todo`);\r\n    },\r\n    toggleDone(todoId) {\r\n        return instance.patch(`todo?Id=${todoId}`)\r\n    },\r\n    deleteTodo(todoId) {\r\n        return instance.delete(`todo?Id=${todoId}`)\r\n    },\r\n    addTodo(todo) {\r\n        return instance.post(`todo`, todo);\r\n    },\r\n    editTodo(todo) {\r\n        return instance.put(`todo`, todo);\r\n    }\r\n}","import {todoAPI} from \"../api/api\";\r\n\r\n\r\nconst SET_TODOS = '/todo/SET_TODOS';\r\nconst SET_EDIT_TODO = '/todo/SET_EDIT_TODO';\r\nconst TOGGLE_DONE = '/todo/TOGGLE_DONE';\r\nconst DELETE_TODO = '/todo/DELETE_TODO';\r\nconst ADD_TODO = '/todo/ADD_TODO';\r\n\r\n// initial state\r\nlet initialState = {\r\n    todos: null\r\n}\r\n\r\n// todoReducer\r\nconst todoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TODOS:\r\n            return { ...state, ...action.payload };\r\n        case TOGGLE_DONE:\r\n            return { ...state, todos: state.todos.map(todo => {\r\n                if (todo.id !== action.todo.todoId) {\r\n                    return todo;\r\n                }\r\n                return {\r\n                    ...todo,\r\n                    status: !todo.status,\r\n                    updated: action.todo.updated\r\n                };\r\n            })\r\n        };\r\n        case ADD_TODO:\r\n            return { ...state, todos: [action.todo, ...state.todos] }\r\n        case DELETE_TODO:\r\n            return { ...state, todos: state.todos.filter(todo => todo.id !== action.todoId) }\r\n        case SET_EDIT_TODO:\r\n            return { ...state, todos: state.todos.map(s => s.id === action.todo.id ?\r\n                Object.assign({}, s, action.todo) : s )};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setTodos = (todos) => ({type: SET_TODOS, payload: { todos: todos }});\r\n\r\nexport const setToggleDone = (todoId, updated) => ({type: TOGGLE_DONE, todo: { todoId, updated }});\r\n\r\nexport const setDeleteTodo = (todoId) => ({type: DELETE_TODO, todoId});\r\n\r\nexport const addNewTodo = (todo) => ({type: ADD_TODO, todo});\r\n\r\nexport const setEditTodo = (todo) => ({type: SET_EDIT_TODO, todo});\r\n\r\n// thunk - get todos\r\nexport const getTodos = () => async (dispatch) => {\r\n    let response = await todoAPI.getAll();\r\n    if (response.data.status === 0) {\r\n        let todos = response.data.data;\r\n        dispatch(setTodos(todos));\r\n    }\r\n}\r\n\r\nexport const toggleDone = (todoId) => async (dispatch) => {\r\n    let response = await todoAPI.toggleDone(todoId);\r\n    if (response.data.status === 0) {\r\n        dispatch(setToggleDone(todoId, response.data.data));\r\n    }\r\n}\r\n\r\nexport const toggleDoneCheckBox = (todoId) => async (dispatch) => {\r\n    let response = await todoAPI.toggleDone(todoId);\r\n    if (response.data.status === 0) {\r\n        dispatch(setToggleDone(todoId, response.data.data));\r\n    }\r\n}\r\n\r\nexport const deleteTodo = (todoId) => async (dispatch) => {\r\n    let response = await todoAPI.deleteTodo(todoId);\r\n    if (response.data.status === 0) {\r\n        dispatch(setDeleteTodo(todoId));\r\n    }\r\n}\r\n\r\nexport const addTodo = (todo) => async (dispatch) => {\r\n    let response = await todoAPI.addTodo(todo);\r\n    if (response.data.status === 0) {\r\n        dispatch(addNewTodo({...todo, id: response.data.data.id, added: response.data.data.added, updated: response.data.data.added}));\r\n    }\r\n}\r\n\r\nexport const editTodo = (todo) => async (dispatch) => {\r\n    let response = await todoAPI.editTodo(todo);\r\n    if (response.data.status === 0) {\r\n        dispatch(setEditTodo(response.data.data));\r\n    }\r\n}\r\n\r\nexport default todoReducer;","import {authAPI} from \"../api/api\";\r\nimport {getTodos, setTodos} from \"./todo-reducer\";\r\n\r\n\r\nconst SET_USER_DATA = '/auth/SET_USER_DATA';\r\nconst SET_LOGIN_ERRORS = '/auth/SET_LOGIN_ERRORS';\r\nconst SET_REGISTER_ERRORS = '/auth/SET_REGISTER_ERRORS';\r\nconst SET_REGISTER_SUCCEEDED = '/auth/SET_REGISTER_SUCCEEDED';\r\n\r\n// initial state\r\nlet initialState = {\r\n    login: null,\r\n    isAuth: false,\r\n    loginErrors: null,\r\n    registerErrors: null\r\n}\r\n\r\n// authReducer\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return { ...state, ...action.payload };\r\n        case SET_REGISTER_ERRORS:\r\n            return { ...state, ...action.payload };\r\n        case SET_LOGIN_ERRORS:\r\n            return { ...state, ...action.payload };\r\n        case SET_REGISTER_SUCCEEDED:\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n// action creator - adding errors\r\nexport const setLoginErrors = (loginErrors) => ({type: SET_LOGIN_ERRORS, payload: { loginErrors }})\r\nexport const setRegisterErrors = (registerErrors) => ({type: SET_REGISTER_ERRORS, payload: { registerErrors }})\r\n\r\n// action creator - setting user data\r\nexport const setAuthUserData = (login, isAuth) => ({type: SET_USER_DATA, payload: {login, isAuth}});\r\n\r\n// action creator - setting register success\r\nexport const setRegisterSuccess = (message) => ({type: SET_REGISTER_SUCCEEDED, payload: { successMessage: message }})\r\n\r\n// thunk - getting user data\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.status === 0 && response.data.data != null) {\r\n        let login = response.data.data;\r\n        dispatch(setAuthUserData(login, true));\r\n        dispatch(getTodos());\r\n    }\r\n    else {\r\n        dispatch(setAuthUserData(null, false));\r\n    }\r\n}\r\n\r\n// thunk - login\r\nexport const login = (email, password) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password);\r\n    if (response.data.status === 0) {\r\n        localStorage.setItem('token', response.data.data);\r\n        dispatch(getAuthUserData());\r\n    }\r\n    else {\r\n        let message = response.data.message;\r\n        dispatch(setLoginErrors(message));\r\n    }\r\n}\r\n\r\n// thunk - logout\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('token');\r\n    dispatch(setAuthUserData(null, null, null, false))\r\n    dispatch(setTodos(null));\r\n}\r\n\r\n// thunk - register\r\nexport const register = (email, password, passwordConfirm) => async (dispatch) => {\r\n    let response = await authAPI.register(email, password, passwordConfirm);\r\n    if (response.data.status !== 0) {\r\n        dispatch(setRegisterErrors(response.data.errors));\r\n    }\r\n    else {\r\n        dispatch(setRegisterSuccess(response.data.message));\r\n        setTimeout(() => dispatch(setRegisterSuccess(null)), 1500);\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {useState} from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport {Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport * as yup from \"yup\";\r\n\r\n//styles\r\nconst useStyles = makeStyles(() => ({\r\n    loginForm: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    }\r\n}))\r\n\r\n\r\n//validation\r\nconst loginValidationSchema = yup.object({\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(6, 'Password should be of minimum 6 characters length')\r\n        .required('Password is required'),\r\n});\r\n\r\nconst LoginForm = ({login, loginErrors}) => {\r\n    //styles\r\n    const styles = useStyles();\r\n\r\n    //dialog state\r\n    const [loginState, setLoginState] = useState(false);\r\n    const handleOpenLogin = () => setLoginState(true);\r\n    const handleCloseLogin = () => {\r\n        setLoginState(false);\r\n    };\r\n\r\n    //form\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        validationSchema: loginValidationSchema,\r\n        onSubmit: (values) => {\r\n            setDisabled(true);\r\n            login(values.email, values.password);\r\n            setDisabled(false);\r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n    //button state\r\n    let [disabled, setDisabled] = useState(false);\r\n\r\n    return (\r\n        <Box mr={3}>\r\n            <Button variant=\"outlined\" color=\"inherit\" onClick={ handleOpenLogin }>Login</Button>\r\n            <Dialog className={styles.loginForm} open={loginState} onClose={handleCloseLogin} maxWidth={'xs'}>\r\n                <DialogTitle>Login</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <DialogContent >\r\n                        <DialogContentText>Log in to see videos</DialogContentText>\r\n                        <TextField fullWidth id=\"email\" name=\"email\" label=\"Email\" value={formik.values.email} onChange={formik.handleChange} error={formik.touched.email && Boolean(formik.errors.email)} helperText={formik.touched.email && formik.errors.email}/>\r\n                        <TextField fullWidth id=\"password\" name=\"password\" label=\"Password\" type=\"password\" value={formik.values.password} onChange={formik.handleChange} error={formik.touched.password && Boolean(formik.errors.password)} helperText={formik.touched.password && formik.errors.password}/>\r\n                        { loginErrors && <DialogContentText>{loginErrors}</DialogContentText> }\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleCloseLogin} color={\"primary\"}>Cancel</Button>\r\n                        <Button type={'submit'} disabled={disabled} color={\"primary\"}>Login</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nexport default LoginForm;","import {useState} from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport {Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField} from \"@material-ui/core\";\r\nimport * as yup from \"yup\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n\r\n//styles\r\nconst useStyles = makeStyles(() => ({\r\n    registerForm: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    success: {\r\n        textAlign: 'center'\r\n    }\r\n}))\r\n\r\n//validation\r\nconst registerValidationSchema = yup.object({\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(6, 'Password should be of minimum 6 characters length')\r\n        .required('Password is required'),\r\n    passwordConfirm: yup\r\n        .string('Enter password confirmation')\r\n        .min(6, 'Password should be of minimum 6 characters length')\r\n        .oneOf([yup.ref('password'), null], 'Passwords must match')\r\n        .required('Password is required'),\r\n});\r\n//element\r\nconst RegisterForm = ({register, registerErrors, successMessage}) => {\r\n\r\n\r\n    //Register\r\n    const [registerState, setRegisterState] = useState(false);\r\n    const handleOpenRegister = () => setRegisterState(true);\r\n    const handleCloseRegister = () => setRegisterState(false);\r\n\r\n    //form\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            passwordConfirm: ''\r\n        },\r\n        validationSchema: registerValidationSchema,\r\n        onSubmit: async (values) => {\r\n            formik.resetForm();\r\n            setDisabled(true);\r\n            await register(values.email, values.password, values.passwordConfirm);\r\n            setDisabled(false);\r\n            setTimeout(() => setRegisterState(false), 1000);\r\n        },\r\n    });\r\n\r\n    // button state\r\n    let [disabled, setDisabled] = useState(false);\r\n\r\n    //styles\r\n    let styles = useStyles();\r\n    return (\r\n        <Box>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleOpenRegister} onKeyDown={(e) => { if (e.key === 'Enter') { e.preventDefault(); }}}>Sign up</Button>\r\n            <Dialog className={styles.registerForm} open={registerState} onClose={handleCloseRegister} maxWidth={'xs'}>\r\n                <DialogTitle>Sign Up</DialogTitle>\r\n                <form onSubmit={ formik.handleSubmit } onKeyDown={ (e) => { if (e.key === 'Enter') e.preventDefault(); }}  >\r\n                    <DialogContent>\r\n                        <DialogContentText>Sign up to work with todolist</DialogContentText>\r\n                        <TextField fullWidth id=\"email\" name=\"email\" label=\"Email\" value={formik.values.email} onChange={formik.handleChange} error={formik.touched.email && Boolean(formik.errors.email)} helperText={formik.touched.email && formik.errors.email}/>\r\n                        <TextField fullWidth id=\"password\" name=\"password\" label=\"Password\" type=\"password\" value={formik.values.password} onChange={formik.handleChange} error={formik.touched.password && Boolean(formik.errors.password)} helperText={formik.touched.password && formik.errors.password}/>\r\n                        <TextField fullWidth id=\"check\" name=\"passwordConfirm\" label=\"Password Confirmation\" type=\"password\" value={formik.values.passwordConfirm} onChange={formik.handleChange} error={formik.touched.passwordConfirm && Boolean(formik.errors.passwordConfirm)} helperText={formik.touched.passwordConfirm && formik.errors.passwordConfirm}/>\r\n                    </DialogContent>\r\n                    { registerErrors && <DialogContentText>{registerErrors}</DialogContentText> }\r\n                    <DialogActions>\r\n                        <Button onClick={handleCloseRegister} color={\"primary\"}>Cancel</Button>\r\n                        <Button type={'submit'} disabled={disabled} color={\"primary\"}>Register</Button>\r\n                    </DialogActions>\r\n                    { successMessage && <DialogContentText className={styles.success}>{successMessage}</DialogContentText>}\r\n                </form>\r\n            </Dialog>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nexport default RegisterForm;","import LoginForm from \"./LoginForm\";\r\nimport RegisterForm from \"./RegisterForm\";\r\n\r\nconst LoginButtons = ({getTodos, login, register, loginErrors, registerErrors, successMessage, handleSucceeded}) => {\r\n    return (\r\n        <>\r\n            <LoginForm handleSucceeded={handleSucceeded} login={login} loginErrors={loginErrors} getTodos={getTodos}/>\r\n            <RegisterForm handleSucceeded={handleSucceeded} register={register} registerErrors={registerErrors} successMessage={successMessage} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginButtons;","import { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    AppBar, Box, Button, Container, Toolbar, Typography} from \"@material-ui/core\";\r\n\r\nimport LoginButtons from \"./LoginButtons\";\r\n\r\n//styles\r\nconst useStyles = makeStyles(theme => ({\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    logout: {\r\n        marginLeft: theme.spacing(2)\r\n    }\r\n}))\r\n\r\n//element\r\nconst Header = ({handleSucceeded, login, register, logout, isAuth, userName, loginErrors, registerErrors, successMessage, getTodos}) => {\r\n    const styles = useStyles();\r\n    let handleLogout = () => {\r\n        logout();\r\n    }\r\n    return (\r\n        <AppBar position={\"fixed\"}>\r\n            <Container fixed>\r\n                <Toolbar>\r\n                    <Typography variant={\"h6\"} className={styles.title}>Todo list web app</Typography>\r\n                    { isAuth ?\r\n                        <>\r\n                            <Box>\r\n                                <Typography variant={'h6'}>{userName}</Typography>\r\n                            </Box>\r\n                            <Button className={styles.logout} variant=\"contained\" color=\"secondary\" onClick={handleLogout}>Logout</Button>\r\n                        </>\r\n                        :\r\n                        <LoginButtons handleSucceeded={handleSucceeded} login={login} register={register} loginErrors={loginErrors} registerErrors={registerErrors} successMessage={successMessage} getTodos={getTodos}/>}\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import {login, logout, register} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport {getTodos} from \"../../redux/todo-reducer\";\r\n\r\nconst HeaderContainer = (props) => {\r\n    return (\r\n        <Header { ...props } />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        userName: state.auth.login,\r\n        loginErrors: state.auth.loginErrors,\r\n        registerErrors: state.auth.registerErrors,\r\n        successMessage: state.auth.successMessage\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login, logout, register, getTodos } )(HeaderContainer);","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\nconst GLOBAL_ERROR = 'GLOBAL_ERROR';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    globalError: null\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        case GLOBAL_ERROR:\r\n            return {\r\n                ...state,\r\n                globalError: action.error\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const errorCreator = (error) => ({type: GLOBAL_ERROR, error: error});\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    await dispatch(getAuthUserData());\r\n    dispatch(initializedSuccess());\r\n}\r\nexport const handleError = (error) => async (dispatch) => {\r\n    await dispatch(errorCreator(error.toString()));\r\n    setTimeout(() => dispatch(errorCreator(null)), 5000);\r\n}\r\n\r\n\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport todoReducer from \"./todo-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    todo: todoReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n\r\nexport default store;","import {useEffect, useState} from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport {Box, Button, ButtonGroup, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport {createMuiTheme, makeStyles, MuiThemeProvider} from \"@material-ui/core/styles\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport {green, red} from \"@material-ui/core/colors\";\r\nimport * as yup from \"yup\";\r\nlet nounsArray = [\"Idea\", \"Infancy\", \"Infatuation\", \"Inflation\", \"Insanity\", \"Intelligence\", \"Irritation\", \"Joy\", \"Justice\", \"Kindness\", \"Laughter\", \"Law\", \"Liberty\", \"Lie\", \"Life\", \"Loneliness\", \"Loss\", \"Love\", \"Luck\", \"Luxury\", \"Marriage\", \"Mercy\", \"Movement\", \"Nap\", \"Pain\", \"Patience\", \"Peace\", \"Peculiarity\", \"Perseverance\", \"Philosophy\", \"Pleasure\", \"Poverty\", \"Power\", \"Pride\", \"Principle\", \"Reality\", \"Relaxation\", \"Relief\", \"Religion\", \"Restoration\", \"Rhythm\", \"Riches\", \"Right\", \"Rumour\", \"Sacrifice\", \"Sanity\", \"Satisfaction\", \"Self-control\", \"Sensitivity\", \"Service\", \"Shock\", \"Silliness\", \"Skill\", \"Slavery\", \"Sleep\", \"Solitude\", \"Sorrow\", \"Speed\", \"Strength\", \"Strictness\", \"Stupidity\", \"Success\", \"Surprise\", \"Talent\", \"Thought\", \"Thrill\", \"Timing\", \"Tiredness\", \"Tolerance\", \"Trend\", \"Trust\", \"Truth\"];\r\n\r\n//button themes\r\nconst addButton = createMuiTheme({\r\n    palette: {\r\n        primary: green,\r\n        secondary: red,\r\n    }\r\n});\r\n//styles\r\nconst useStyles = makeStyles(theme => ({\r\n    dialog: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    secondaryIcon: {\r\n        marginRight: theme.spacing(0.5),\r\n        transition: 'all 0.3s ease-out',\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n            color: 'purple'\r\n        }\r\n    },\r\n    tags: {\r\n        marginTop: '15px',\r\n        display: 'flex',\r\n        justifyContent: 'space-around'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    addButtons: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        margin: '15px auto',\r\n        minWidth: '400px'\r\n    },\r\n    addButton: {\r\n        flexGrow: 1\r\n    },\r\n    done: {\r\n        color: \"white\"\r\n    }\r\n}));\r\n//validation\r\nconst todoValidationSchema = yup.object({\r\n    title: yup\r\n        .string(`Enter tasks' title`)\r\n        .required('Title is required'),\r\n    content: yup\r\n        .string(`Enter tasks' content`)\r\n        .min(3, 'Description should be of minimum 3 characters length')\r\n        .required('Task description is required')\r\n})\r\n//element\r\nconst EditTodo = ({editTodo, editingTodo}) => {\r\n    useEffect(() => {\r\n        setStatus(editingTodo.status)\r\n    }, [editingTodo]);\r\n\r\n\r\n    //styles\r\n    const classes = useStyles();\r\n\r\n    //dialog state\r\n    let [open, setOpen] = useState(false);\r\n    const handleOpen = () => { setOpen(true); }\r\n    const handleClose = () => { setOpen(false); }\r\n\r\n    //button state\r\n    let [disabled, setDisabled] = useState(false);\r\n\r\n    //tags\r\n    const [firstTag, setFirstTag] = useState(editingTodo.tags[0]);\r\n    const [secondTag, setSecondTag] = useState(editingTodo.tags[1]);\r\n    const [thirdTag, setThirdTag] = useState(editingTodo.tags[2]);\r\n    const handleFirstTagChange = (event) => {\r\n        setFirstTag(event.target.value);\r\n    };\r\n    const handleSecondTagChange = (event) => {\r\n        setSecondTag(event.target.value);\r\n    };\r\n    const handleThirdTagChange = (event) => {\r\n        setThirdTag(event.target.value);\r\n    };\r\n\r\n    //status buttons\r\n    const handleCompleted = () => setStatus(true);\r\n    const handleInProgress = () => setStatus(false);\r\n\r\n    //status hook\r\n    let [status, setStatus] = useState(editingTodo.status == true);\r\n\r\n    //formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: editingTodo.title,\r\n            content: editingTodo.content,\r\n            status: editingTodo.status == true,\r\n            tags: [firstTag, secondTag, thirdTag],\r\n            id: editingTodo.id,\r\n            added: editingTodo.added\r\n        },\r\n        validationSchema: todoValidationSchema,\r\n        onSubmit: (values) => {\r\n            setDisabled(true);\r\n            editTodo({...values, tags: [firstTag, secondTag, thirdTag], status});\r\n            setDisabled(false);\r\n            formik.resetForm();\r\n            handleClose();\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <EditIcon className={classes.secondaryIcon} onClick={handleOpen}/>\r\n            <Dialog open={open} onClose={handleClose} maxWidth={'sm'}>\r\n                <DialogTitle>Edit Task</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <DialogContent className={classes.dialog}>\r\n                        <DialogContentText>Edit todo</DialogContentText>\r\n                        <TextField fullWidth id=\"title\" name=\"title\" label=\"Title\" value={formik.values.title}\r\n                                   onChange={formik.handleChange}\r\n                                   error={formik.touched.title && Boolean(formik.errors.title)}\r\n                                   helperText={formik.touched.title && formik.errors.title}/>\r\n                        <TextField fullWidth id=\"content\" name=\"content\" label=\"Content\" value={formik.values.content}\r\n                                   onChange={formik.handleChange}\r\n                                   error={formik.touched.content && Boolean(formik.errors.content)}\r\n                                   helperText={formik.touched.content && formik.errors.content}/>\r\n                        <Box className={classes.tags}>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel>Tag</InputLabel>\r\n                                <Select value={firstTag} onChange={handleFirstTagChange} label=\"Tag\">\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    {nounsArray.map(x => <MenuItem value={x} key={x}>{x}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel>Tag</InputLabel>\r\n                                <Select value={secondTag} onChange={handleSecondTagChange} label=\"Tag\">\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    {nounsArray.map(x => <MenuItem value={x} key={x}>{x}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel>Tag</InputLabel>\r\n                                <Select value={thirdTag} onChange={handleThirdTagChange} label=\"Tag\">\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    {nounsArray.map(x => <MenuItem value={x} key={x}>{x}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Box>\r\n                        <MuiThemeProvider theme={addButton}>\r\n                            <ButtonGroup className={classes.addButtons} size=\"large\" color=\"primary\">\r\n                                <Button className={`${classes.addButton} ${status && classes.done}`} color={'primary'}\r\n                                        variant={status ? 'contained' : 'outlined'}\r\n                                        onClick={handleCompleted}>Completed</Button>\r\n                                <Button className={classes.addButton} color={'secondary'}\r\n                                        variant={status ? 'outlined' : 'contained'} onClick={handleInProgress}>In\r\n                                    progress</Button>\r\n                            </ButtonGroup>\r\n                        </MuiThemeProvider>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color={\"primary\"}>Cancel</Button>\r\n                        <Button type={'submit'} disabled={disabled} color={\"primary\"}>Edit</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditTodo;","import {useState} from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport {Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Fab, FormControl, InputLabel, MenuItem, Select, TextField} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport * as yup from \"yup\";\r\nlet nounsArray = [\"Idea\", \"Infancy\", \"Infatuation\", \"Inflation\", \"Insanity\", \"Intelligence\", \"Irritation\", \"Joy\", \"Justice\", \"Kindness\", \"Laughter\", \"Law\", \"Liberty\", \"Lie\", \"Life\", \"Loneliness\", \"Loss\", \"Love\", \"Luck\", \"Luxury\", \"Marriage\", \"Mercy\", \"Movement\", \"Nap\", \"Pain\", \"Patience\", \"Peace\", \"Peculiarity\", \"Perseverance\", \"Philosophy\", \"Pleasure\", \"Poverty\", \"Power\", \"Pride\", \"Principle\", \"Reality\", \"Relaxation\", \"Relief\", \"Religion\", \"Restoration\", \"Rhythm\", \"Riches\", \"Right\", \"Rumour\", \"Sacrifice\", \"Sanity\", \"Satisfaction\", \"Self-control\", \"Sensitivity\", \"Service\", \"Shock\", \"Silliness\", \"Skill\", \"Slavery\", \"Sleep\", \"Solitude\", \"Sorrow\", \"Speed\", \"Strength\", \"Strictness\", \"Stupidity\", \"Success\", \"Surprise\", \"Talent\", \"Thought\", \"Thrill\", \"Timing\", \"Tiredness\", \"Tolerance\", \"Trend\", \"Trust\", \"Truth\"];\r\n\r\n//styles\r\nconst useStyles = makeStyles(theme => ({\r\n    addNew: {\r\n        marginLeft: 'auto',\r\n        marginRight: theme.spacing(2.5),\r\n        marginTop: '10px'\r\n    },\r\n    tags: {\r\n        marginTop: '15px',\r\n        display: 'flex',\r\n        justifyContent: 'space-around'\r\n    },\r\n    dialog: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    }\r\n}));\r\n//validation\r\nconst todoValidationSchema = yup.object({\r\n    title: yup\r\n        .string(`Enter tasks' title`)\r\n        .required('Title is required'),\r\n    content: yup\r\n        .string(`Enter tasks' content`)\r\n        .min(3, 'Description should be of minimum 3 characters length')\r\n        .required('Task description is required')\r\n})\r\n//element\r\nconst AddNewTodo = ({addTodo}) => {\r\n    //styles\r\n    const classes = useStyles();\r\n\r\n    //dialog state\r\n    const [newTodoState, setNewTodoState] = useState(false);\r\n    const handleOpenNewTodo = () => setNewTodoState(true);\r\n    const handleCloseNewTodo = () => {\r\n        formik.resetForm();\r\n        setFirstTag('');\r\n        setSecondTag('');\r\n        setThirdTag('');\r\n        setNewTodoState(false);\r\n    };\r\n\r\n    //tags state\r\n    const [firstTag, setFirstTag] = useState('');\r\n    const [secondTag, setSecondTag] = useState('');\r\n    const [thirdTag, setThirdTag] = useState('');\r\n    const handleFirstTagChange = (event) => {\r\n        setFirstTag(event.target.value);\r\n    };\r\n    const handleSecondTagChange = (event) => {\r\n        setSecondTag(event.target.value);\r\n    };\r\n    const handleThirdTagChange = (event) => {\r\n        setThirdTag(event.target.value);\r\n    };\r\n\r\n    //form\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: '',\r\n            content: '',\r\n            tags: []\r\n        },\r\n        validationSchema: todoValidationSchema,\r\n        onSubmit: (values) => {\r\n            setDisabled(true);\r\n            addTodo({...values, tags: [firstTag, secondTag, thirdTag]});\r\n            setDisabled(false);\r\n            setFirstTag('');\r\n            setSecondTag('');\r\n            setThirdTag('');\r\n            formik.resetForm();\r\n            handleCloseNewTodo();\r\n        }\r\n    });\r\n\r\n    //button status\r\n    let [disabled, setDisabled] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Fab color=\"secondary\" className={classes.addNew} onClick={handleOpenNewTodo}>\r\n                <AddIcon />\r\n            </Fab>\r\n            <Dialog open={newTodoState} onClose={handleCloseNewTodo} maxWidth={'sm'} ma>\r\n                <DialogTitle>New Task</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <DialogContent className={classes.dialog}>\r\n                        <DialogContentText>Fill in the gaps</DialogContentText>\r\n                        <TextField fullWidth id=\"title\" name=\"title\" label=\"Title\" value={formik.values.title} onChange={formik.handleChange} error={formik.touched.title && Boolean(formik.errors.title)} helperText={formik.touched.title && formik.errors.title}/>\r\n                        <TextField fullWidth id=\"content\" name=\"content\" label=\"Content\" value={formik.values.content} onChange={formik.handleChange} error={formik.touched.content && Boolean(formik.errors.content)} helperText={formik.touched.content && formik.errors.content}/>\r\n                        <Box className={classes.tags}>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel>Tag</InputLabel>\r\n                                <Select value={firstTag} onChange={handleFirstTagChange} label=\"Tag\">\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    {nounsArray.map(x => <MenuItem value={x} key={x}>{x}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel>Tag</InputLabel>\r\n                                <Select value={secondTag} onChange={handleSecondTagChange} label=\"Tag\">\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    {nounsArray.map(x => <MenuItem value={x} key={x}>{x}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel>Tag</InputLabel>\r\n                                <Select value={thirdTag} onChange={handleThirdTagChange} label=\"Tag\">\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    {nounsArray.map(x => <MenuItem value={x} key={x}>{x}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Box>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleCloseNewTodo} color={\"primary\"}>Cancel</Button>\r\n                        <Button type={'submit'} disabled={disabled} color={\"primary\"}>Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default AddNewTodo;","import {useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport { Checkbox,  CircularProgress,  Container,  List,  ListItem,  ListItemIcon,  ListItemSecondaryAction,  ListItemText, Paper, TablePagination } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport {toggleDoneCheckBox} from \"../../redux/todo-reducer\";\r\nimport EditTodo from \"./EditTodo\";\r\nimport AddNewTodo from \"./AddTodo\";\r\n\r\n//styles\r\nconst useStyles = makeStyles(theme => ({\r\n    todos: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: 0\r\n    },\r\n    listItem: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center'\r\n    },\r\n    listItemText: {\r\n        marginRight: '15px'\r\n    },\r\n    chip: {\r\n        marginRight: '10px'\r\n    },\r\n    note: {\r\n        transitionDuration: \"0.3s\",\r\n        '&:hover': {\r\n            backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n            cursor: \"pointer\"\r\n        },\r\n    },\r\n    done: {\r\n        color: \"white\"\r\n    },\r\n    doneNote: {\r\n        transitionDuration: \"0.3s\",\r\n        backgroundColor: \"rgba(104, 62, 182, 0.30)\",\r\n        opacity: \"50%\",\r\n        \"&:hover\": {\r\n            cursor: \"pointer\"\r\n        },\r\n    },\r\n    dates: {\r\n        marginLeft: 'auto',\r\n        marginRight: '30px'\r\n    },\r\n    date: {\r\n        marginRight: '8px'\r\n    },\r\n    paper: {\r\n        paddingBottom: theme.spacing(21),\r\n        borderRadius: '20px',\r\n        minHeight: theme.spacing(40),\r\n        position: 'relative',\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    todolist: {\r\n        marginTop: theme.spacing(12)\r\n    },\r\n    todolistHeader: {\r\n        display: 'flex',\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n        backgroundColor: '#ff1744',\r\n        color: 'white',\r\n        borderRadius: '20px 20px 0 0'\r\n    },\r\n    todolistHeaderDates: {\r\n        display: 'flex',\r\n        marginLeft: 'auto',\r\n        marginRight: theme.spacing(8),\r\n        alignItems: 'center'\r\n    },\r\n    todolistHeaderTitle: {\r\n        marginLeft: theme.spacing(8.8),\r\n        fontSize: '18px'\r\n    },\r\n    todolistHeaderDatesItem: {\r\n        fontSize: '18px',\r\n        marginRight: theme.spacing(7.5),\r\n        marginLeft: theme.spacing(4)\r\n    },\r\n    secondary: {\r\n        marginRight: theme.spacing(0.3),\r\n        paddingTop: '3px',\r\n    },\r\n    secondaryIcon: {\r\n        marginRight: theme.spacing(0.5),\r\n        transition: 'all 0.3s ease-out',\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n            color: 'purple'\r\n        }\r\n    },\r\n    tablePagination: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        right: 0\r\n    },\r\n    addTodo: {\r\n        position: 'absolute',\r\n        bottom: 60,\r\n        right: 0\r\n    }\r\n}))\r\n//element\r\nconst Todolist = ({todos, toggleDone, deleteTodo, addTodo, editTodo}) => {\r\n    //styles\r\n    const classes = useStyles();\r\n    //button/checkbox handling\r\n    const handleDelete = (todoId) => () => {\r\n        deleteTodo(todoId);\r\n    };\r\n    const handleToggleDone = (todoId) => () => {\r\n        toggleDone(todoId);\r\n    }\r\n    const handleCheckboxClick = (todoId) => () => {\r\n        toggleDoneCheckBox(todoId);\r\n    };\r\n\r\n    //pagination\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(8);\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    //progress\r\n    if (!todos) return <CircularProgress/>;\r\n\r\n    //todos\r\n    let sliced;\r\n    if (rowsPerPage > 0) {\r\n        sliced = todos.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\r\n    } else {\r\n        sliced = todos;\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.todolist}>\r\n            <Paper className={classes.paper}>\r\n                <div className={classes.todolistHeader}>\r\n                    <div className={classes.todolistHeaderTitle}>Task</div>\r\n                    <div className={classes.todolistHeaderDates}>\r\n                        <div className={classes.todolistHeaderDatesItem}>Added</div>\r\n                        <div className={classes.todolistHeaderDatesItem}>Updated</div>\r\n                    </div>\r\n                </div>\r\n                <List className={classes.todos}>\r\n                    {sliced.map(x =>\r\n                        <ListItem className={x.status ? classes.doneNote : classes.note } key={x.id} onClick={handleToggleDone(x.id)} >\r\n                            <ListItemIcon>\r\n                                <Checkbox checked={x.status == true} onClick={handleCheckboxClick(x.id)}/>\r\n                            </ListItemIcon>\r\n                            <div className={classes.listItem}>\r\n                                <ListItemText className={classes.listItemText} primary={x.title} secondary={x.content}/>\r\n                                { x.tags && x.tags.map(x => x && <Chip key={x.id} variant={\"outlined\"} className={classes.chip} label={x}/>) }\r\n                            </div>\r\n                            <div className={classes.dates}>\r\n                                <Chip variant={\"outlined\"} key={x.added} className={classes.date} label={new Date(Date.parse(x.added)).toLocaleString()}/>\r\n                                <Chip variant={\"outlined\"} key={x.updated} className={classes.date} label={new Date(Date.parse(x.updated)).toLocaleString()}/>\r\n                            </div>\r\n                            <ListItemSecondaryAction className={classes.secondary}>\r\n                                <EditTodo editingTodo={x} editTodo={editTodo}/>\r\n                                <DeleteIcon className={classes.secondaryIcon} onClick={handleDelete(x.id)}/>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>)}\r\n                </List>\r\n                <div className={classes.addTodo} >\r\n                    <AddNewTodo addTodo={addTodo}/>\r\n                </div>\r\n                <TablePagination className={classes.tablePagination} rowsPerPageOptions={[8, 16, 25]} component=\"div\" count={todos.length} rowsPerPage={rowsPerPage} page={page} onChangePage={handleChangePage} onChangeRowsPerPage={handleChangeRowsPerPage}/>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Todolist;","import Todolist from \"./Todolist\";\r\nimport {connect} from \"react-redux\";\r\nimport {addTodo, deleteTodo, editTodo, getTodos, toggleDone, toggleDoneCheckBox} from \"../../redux/todo-reducer\";\r\nimport React from 'react';\r\n\r\n\r\nconst TodolistContainer = (props) => {\r\n    return <Todolist {...props} />\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        todos: state.todo.todos\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getTodos, toggleDone, deleteTodo, addTodo, editTodo, toggleDoneCheckBox })(TodolistContainer);","import './App.css';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport { deepPurple, red, green } from \"@material-ui/core/colors\";\nimport store from \"./redux/redux-store\";\nimport {connect, Provider} from \"react-redux\";\nimport { useEffect } from \"react\";\nimport {handleError, initializeApp} from \"./redux/app-reducer\";\nimport {CircularProgress} from \"@material-ui/core\";\nimport TodolistContainer from \"./components/Todos/TodolistContainer\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: deepPurple,\n        secondary: red,\n        success: green\n    }\n});\n\nfunction App({initializeApp, initialized}) {\n    useEffect(() => {\n        initializeApp();\n    })\n    if (!initialized) {\n        return <CircularProgress/>\n    }\n    return (\n    <>\n            <MuiThemeProvider theme={theme}>\n                <HeaderContainer />\n                <TodolistContainer/>\n            </MuiThemeProvider>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initialized: state.app.initialized,\n        globalError: state.app.globalError\n    }\n}\n\nlet AppContainer = connect(mapStateToProps, {initializeApp, handleError})(App);\n\nlet Application = () => {\n    return (\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    )\n}\n\nexport default Application;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Application from \"./App\";\n\nReactDOM.render(\n    <Application />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}